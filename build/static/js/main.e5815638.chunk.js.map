{"version":3,"sources":["components/form/Dropzone.js","components/utils/GatewayParser.js","redux/app/appActions.js","redux/reduxUtils.js","redux/app/appReducer.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/minting/formReducer.js","redux/store.js","components/utils/Roles.js","components/navigation/SidebarData.js","components/utils/Other.js","components/utils/Cryptography.js","redux/minting/formActions.js","components/utils/Exchange.js","redux/data/dataActions.js","redux/blockchain/eventSubscriber.js","redux/blockchain/blockchainActions.js","components/vehicle_sections/MiniCard.js","components/pages/MyVehicles.js","components/filters/filters.js","components/pages/Marketplace.js","components/filters/Search.js","components/pages/Verify.js","components/form/Form.js","components/pages/Mint.js","components/pages/Admin.js","components/navigation/ControlledRoute.js","components/vehicle_sections/History.js","components/vehicle_sections/NotMyVehicleListed.js","components/vehicle_sections/MyVehicleNotListed.js","components/vehicle_sections/MyVehicleListed.js","components/vehicle_sections/BigCard.js","components/vehicle_sections/Approve.js","components/pages/Vehicle.js","components/modals/Error.js","components/modals/Loading.js","components/modals/CustomModal.js","components/pages/Garage.js","components/pages/Edit.js","components/navigation/MainMenu.js","components/navigation/AccountStatus.js","components/modals/PendingTX.js","components/navigation/SelectNetwork.js","components/pages/Options.js","components/navigation/More.js","components/views/NormalView.js","App.js","index.js"],"names":["Dropzone","dispatch","useDispatch","form","useSelector","state","useState","goodToGo","setGoodToGo","buffer","setBuffer","preview","setPreview","checkDimensions","gcxd","gcd","this","width","height","Error","err","alerts","alert","message","useDropzone","multiple","accept","onDrop","acceptedFiles","reader","FileReader","onload","boss","URL","createObjectURL","Buffer","result","split","readAsDataURL","img","Image","src","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useEffect","uploadImage","sx","background","borderRadius","bgcolor","display","alignItems","justifyContent","padding","spacing","xs","sm","md","lg","style","objectFit","className","getRole","account","a","roles","role","callViewChainFunction","USER_ROLE","getNetworkRpcUrl","network","store","getState","blockchain","networkTables","networks","rpcUrls","getNetworkExplorer","blockExplorerUrls","getIfIsTopBidder","id","getUserAccount","getIfIsOwner","vehicleId","functionName","args","getContractFor","theContract","methods","call","typeOfWhat","what","smartContracts","contract","Object","keys","includes","callChainFunction","send_field","from","TX","send","once","failedAlert","then","receipt","successAlert","tx","currentNetwork","EXPLORER_BASE_URL","url","transactionHash","error","payload","type","updateDataState","updateBlockchainState","updateAppState","deleteFieldKey","getWeb3","web3","getWalletProvider","walletProvider","getNetworkTables","getCurrentNetwork","initialState","loading","other","initializedApp","appReducer","action","field","value","push","pop","pendingTx","blockchainReducer","txState","allVehicles","displayCurrency","myRole","VIEWER_ROLE","dataReducer","subfield","key","complex","fields","forEach","element","field2","formFields","nrOfSteps","step","company","model","vhcid","year","color","body","transmission","fuel","engine","doors","seats","driver_side","errors","edit","formReducer","name","rootReducer","combineReducers","app","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","createStore","ViewerSidebar","title","path","icon","cName","UserSidebar","GarageSidebar","AuthoritySidebar","AdminSidebar","AuthorityAdminSidebar","MinterSidebar","Sidebar","VIEWER","USER","AUTHORITY","AUTHORITY_ADMIN","MINTER","MINTER_ADMIN","GARAGE","DEFAULT_ADMIN","keccak256","require","DEFAULT_ADMIN_ROLE","MINTER_ROLE_ADMIN","AUTHORITY_ROLE_ADMIN","MINTER_ROLE","AUTHORITY_ROLE","ODOMETER_ROLE","GARAGE_ROLE","actions","DEFAULT_ADMIN_OPTIONS","roleManaging","vehicleBurning","setOdometers","MINTER_ADMIN_OPTIONS","AUTHORITY_ADMIN_OPTIONS","EMPTY_OPTIONS","getAdminOptionsFor","getSidebarFor","pageAccess","EDIT","MINT","VERIFY","ADMIN","checkRoutePermissionFor","pathBeingAccessed","userRole","some","allowedRole","listToNSublists","list","n","sublists","length","splice","sleep","ms","Promise","resolve","setTimeout","b","formatAccountAddress","address","slice","scramble","string","x","sort","Math","random","join","substitute","str","pos","floor","substring","letters","charAt","getRandomLetter","i","randomIntFromInterval","min","max","nextStep","prevStep","formUpdate","updateEntry","createMetaDataAndMint","ipfsClient","create","add","image","Date","now","metaDataObj","created","updated","attributes","nonce1","nonce2","JSON","stringify","vehicleHash","updateMetadata","vehicle","injected","removeLinkFrame","indexOf","newVehicle","assign","fetchAllCurrencies","request","fetch","json","response","roundToNDigits","digits","num","round","fetchRate","to","hasOwnProperty","parseFloat","amount","currencyToCurrency","rate","weiToMyCurrency","price","myPrefferedCurrency","priceInETH","utils","fromWei","String","price1","price2","priceInUserCurrency","myCurrencyToWei","priceInWei","toWei","ipfsGateways","assembleVehicleObjects","assembled","ids","URI","uris","owner","owners","garage","garages","isForSale","sales","prices","isAuction","auctions","topBidder","bidders","vehicleMetadata","k","r","status","sale","display_price","auction","refreshVehicle","tokenId","getEverything","startTime","performance","endTime","console","log","getDefaultVehicles","all","fetchMyData","updatePrefferedCurrency","refreshDisplayPrices","forsale","refreshVehicleInfo","subscribeToEvent","eventName","events","event","returnValues","CONTRACT_LIST","Gateway","Vehicle","Roles","Odometer","Management","fetchWalletProvider","detectEthereumProvider","timeout","provider","MetaMaskOnboarding","startOnboarding","fetchWalletAccounts","method","accounts","fetchWalletChain","addChain","newNetwork","params","NetworkTables","switchChain","chainId","addOrSwitchNetwork","updateWalletProvider","wallet","updateWeb3","Web3","updateAppAccount","toChecksumAddress","updateAppNetwork","login","loadSmartContracts","loadSmartContract","chain","sc","eth","Contract","abi","hexToNumber","smartContractList","subscribeToChainEvents","Transfer","token","smartContract","thisAccount","Approval","MiniCard","window","location","pathname","metadata","Avatar","diameter","seed","jsNumberForAddress","Stack","direction","MyVehicles","Grid","container","columns","xl","values","map","index","item","filterByPropertyValue","property","filter","getSaleVehicles","saleVehicles","entries","Marketplace","pageNr","setPageNr","pages","setPages","pool","setPool","filterObject","setFilterObject","minPrice","setMinPrice","maxPrice","setMaxPrice","lowBound","setLowBound","highBound","setHighBound","perPage","setPerPage","newSelect","setNewSelect","assembleSearcher","allAttributes","label","options","group","concat","temp","temp3","temp2","assembleAllKeywords","vehicles","lowBoundary","parsedPrice","parseInt","final","highBoundary","parsed","listOfVehicles","collection","getAttributesCollection","createLowBoundary","createHighBoundary","newCopy","valueA","valueB","specialSort","obj","acc","show","elz","sortType","sortBy","filterByFilterObject","filterPriceRange","applyFilters","React","value1","setValue1","marks","marginTop","Box","isOptionDisabled","selected","formatGroupLabel","flexDirection","placeholder","onChange","mf","object","isMulti","Slider","newValue","activeThumb","minDistance","Array","isArray","onChangeCommitted","valueLabelDisplay","valueLabelFormat","Tooltip","Fragment","Typography","IconButton","Pagination","page","showFirstButton","showLastButton","count","FormControl","variant","m","minWidth","InputLabel","Select","size","e","target","MenuItem","SearchFilter","modifier","reset","wordEntered","setWordEntered","iconFocused","setIconFocused","inputFocused","setInputFocused","clearInput","onClick","onBlur","onFocus","word","newFilter","toLowerCase","handleFilter","Verify","vehicleList","history","useHistory","Search","Paper","Form","setForceUpdate","validate","currentFields","getCurrentFields","pass","resetErrors","getPlaceholder","returntext","TextField","backgroundColor","disabled","Mint","mt","Admin","useForm","myAdminOptions","register","handleSubmit","roleOption","setRoleOption","roleSelected","setRoleSelected","roleAddress","setRoleAddress","vehicleToBurn","setVehicleToBurn","oddAddr","setOddAddr","vehicleToOdd","setVehicleToOdd","fullWidth","Button","isAddress","PrivateRoute","Component","component","rest","render","props","History","vehicleHistory","setVehicleHistory","odometerValue","setOdometerValue","newTabTx","txHash","open","focus","newTabAddress","getVehicleHistory","getBlock","blockHash","timestamp","getPastEvents","fromBlock","toBlock","margin","time","toLocaleDateString","NotMyVehicleListed","desiredPrice","setDesiredPrice","displayPrice","setDisplayPrice","setTopBidder","setIsAuction","isTopBidder","setIsTopBidder","myBalance","setMyBalance","canBuy","setCanBuy","buyOrBid","vehiclePriceRaw","getBalance","myBalanceRaw","MyVehicleNotListed","typeToggle","setTypeToggle","approved","setApproved","listVehicle","convertedPrice","marketContractAddress","_address","approval","MyVehicleListed","BigCard","Card","Approve","garageAddress","setGarageAddress","alreadyApproved","setAlreadyApproved","checkIfHasAnyApproved","useLocation","eexists","setEexists","setIsForSale","isOwner","setIsOwner","tab","setTab","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","reload","replace","handleClose","reason","Snackbar","autoHideDuration","onClose","Alert","severity","at","Loading","Backdrop","zIndex","theme","drawer","CircularProgress","CustomModal","href","Garage","Edit","MainMenu","top","left","bottom","right","setState","toggleDrawer","anchor","sidebar","setValue","handleChange","parentElement","children","greaterThan700","useMediaQuery","Drawer","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","maxWidth","Tabs","scrollButtons","Tab","NotConnectedDialog","Dialog","DialogTitle","pt","ListItemAvatar","ConnectedDialog","explorerUrl","setExplorerUrl","Link","rel","AccountStatus","open1","setOpen1","open2","setOpen2","Chip","avatar","PendingTX","SimpleDialog","kkey","images","chainName","SelectNetwork","changeNetwork","setOpen","Options","cryptoCurrencies","availableCurrencies","setAvailableCurrencies","currency","More","anchorEl","setAnchorEl","Boolean","currentTarget","Menu","MenuListProps","NormalView","ControlledRoute","exact","App","first","setfirst","ethereum","on","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e5815638.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uploadImage } from \"../../redux/minting/formActions\";\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { Stack } from '@mui/material';\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport { gcd } from '../utils/Other';\r\n/**\r\n  * Dropzone component which allows for users to upload images\r\n  * This is regulated and restricted on uploading certain dimensions for\r\n  * images. \r\n  * The user can either drag and drop or click to upload.\r\n  */\r\nconst Dropzone = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const form = useSelector((state) => state.form);\r\n\r\n    const [goodToGo, setGoodToGo] = useState(false)\r\n    const [buffer, setBuffer] = useState(null)\r\n    const [preview, setPreview] = useState(null)\r\n\r\n    /**\r\n  * Checks that the aspect ratio is good enough for the app\r\n  */\r\n    function checkDimensions() {\r\n        try {\r\n            var gcxd = gcd(this.width, this.height)\r\n            if (this.width / gcxd - this.height / gcxd < 0)\r\n                throw Error(\"Image must not have a portrait aspect ratio.\")\r\n            setGoodToGo(true)\r\n        }\r\n        catch (err) {\r\n            dispatch(alerts({ alert: \"error\", message: err.message }))\r\n        }\r\n    }\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        multiple: false,\r\n        accept: \"image/*\",\r\n        onDrop: (acceptedFiles) => {\r\n            try {\r\n                const reader = new FileReader();\r\n                reader.onload = (boss) => {\r\n                    setPreview(URL.createObjectURL(acceptedFiles[0]))\r\n                    setBuffer(Buffer(reader.result.split(\",\")[1], \"base64\"))\r\n                };\r\n                reader.readAsDataURL(acceptedFiles[0]);\r\n\r\n                const img = new Image();\r\n                img.onload = checkDimensions\r\n                img.src = URL.createObjectURL(acceptedFiles[0]);\r\n            }\r\n            catch (err) {\r\n                dispatch(alerts({ alert: \"error\", message: err.message }))\r\n            }\r\n        },\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (goodToGo) {\r\n            dispatch(uploadImage({ preview: preview, buffer: buffer }))\r\n            setGoodToGo(false)\r\n        }\r\n    }, [goodToGo])\r\n\r\n\r\n\r\n    return (\r\n        <Stack\r\n            sx={{\r\n                background: \"linear-gradient(90deg,rgb(39, 176, 255) 0%,rgb(0, 232, 236) 100%)\"\r\n            }}\r\n            borderRadius=\"10px\"\r\n            bgcolor=\"red\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            padding={4}\r\n            spacing={2}\r\n            width={{ xs: \"100%\", sm: \"100%\", md: \"100%\", lg: \"50%\" }}\r\n        >\r\n            <p>Vehicle Image</p>\r\n            <div {...getRootProps()} >\r\n                <input {...getInputProps()} />\r\n                <img\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\"\r\n                    }}\r\n                    className='form-img' src={form.preview} />\r\n            </div>\r\n            <p>Drag & drop or click to upload an image</p>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default Dropzone;\r\n","import { roles } from \"./Roles\";\r\nimport store from \"../../redux/store\";\r\nimport { alerts, TX } from \"../../redux/app/appActions\";\r\nimport { getUserAccount } from \"../../redux/reduxUtils\";\r\n\r\n/**\r\n * This function tries to find the role of an account's address in the blockchcain\r\n * @param account the account for which we wish to find a role\r\n */\r\nexport async function getRole(account) {\r\n    for (const role in roles) {\r\n        if (await callViewChainFunction(\"hasRole\", [roles[role], account]))\r\n            return roles[role]\r\n    }\r\n    return roles.USER_ROLE\r\n}\r\n\r\nexport const getNetworkRpcUrl = async (network) => {\r\n    return await store.getState().blockchain.networkTables.networks[network].rpcUrls[0]\r\n}\r\n\r\nexport const getNetworkExplorer = async (network) => {\r\n    return await store.getState().blockchain.networkTables.networks[network].blockExplorerUrls[0]\r\n}\r\n\r\nexport async function getIfIsTopBidder(id) {\r\n    return await callViewChainFunction(\"getTopBidder\", [id]) == await getUserAccount()\r\n}\r\n\r\nexport async function getIfIsOwner(vehicleId) {\r\n    return await callViewChainFunction(\"ownerOf\", [vehicleId]) == await getUserAccount()\r\n}\r\n\r\n/**\r\n * This function is used to call a view function on the blockchain\r\n * It finds the contract in our ecosystem which uses that function and then\r\n * calls the contract with the functionName provided and the args specified\r\n * @param functionName the function we wish to call\r\n * @param args the arguments to pass to the function\r\n */\r\nexport async function callViewChainFunction(functionName, args) {\r\n\r\n    const theContract = await getContractFor(\"methods\", functionName)\r\n    if (theContract == -1)\r\n        throw Error('Not supported')\r\n\r\n    return await theContract.methods\r\n    [functionName](...args)\r\n        .call();\r\n}\r\n\r\n/**\r\n * This function searches all of the contracts for a what in a\r\n * type of what. Eg. search for event \"Approval\" in \"events\" where\r\n * \"Approval\" is the what and \"events\" is the type of what.\r\n * It basically allows to search for anything in any key of the contract\r\n * object.\r\n * @param typeOfWhat the type of what we are trying to search\r\n * @param what what we are trying to search\r\n */\r\nexport async function getContractFor(typeOfWhat, what) {\r\n\r\n    const smartContracts = await store.getState().blockchain.smartContracts\r\n    for (var contract in smartContracts) {\r\n        if (Object.keys(smartContracts[contract][typeOfWhat]).includes(what))\r\n            return smartContracts[contract]\r\n    }\r\n    return -1\r\n}\r\n\r\n/**\r\n * This function is used to call a transaction function on the blockchain \r\n * It makes sure that the transaction that is sent is authenticated.\r\n * @param functionName the name of the function we are trying to call\r\n * @param args the arguments to pass to the function\r\n * @param send_field the authenticated field to be sent to the blockchain.\r\n * This is empty by default and optional since the basic minimum, the user's\r\n * address is automatically added.\r\n */\r\nexport function callChainFunction(functionName, args, send_field = {}) {\r\n    return async (dispatch) => {\r\n\r\n        const theContract = await getContractFor(\"methods\", functionName)\r\n        if (theContract == -1)\r\n            throw Error('Operation not supported')\r\n\r\n        send_field.from = await getUserAccount()\r\n        \r\n        dispatch(TX({ message: \"+1\" }))\r\n\r\n        return await theContract.methods\r\n        [functionName](...args)\r\n            .send(send_field)\r\n            .once(\"error\", (err) => {\r\n                dispatch(alerts(failedAlert(err)))\r\n                dispatch(TX({}))\r\n            })\r\n            .then(async (receipt) => {\r\n                dispatch(alerts(await successAlert(receipt)))\r\n                dispatch(TX({}))\r\n            });\r\n    }\r\n}\r\n\r\nasync function successAlert(tx) {\r\n    const EXPLORER_BASE_URL = await getNetworkExplorer(await store.getState().blockchain.currentNetwork) + \"tx/\"\r\n    return { alert: \"other\", url: EXPLORER_BASE_URL + tx.transactionHash, message: `Transaction successful.\\n` }\r\n}\r\n\r\nfunction failedAlert(error) {\r\n    return { alert: \"error\", message: `Transaction failed. ${error.message}` }\r\n}","export const alerts = (payload) => {\r\n    return {\r\n        type: \"ALERT\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const TX = (payload) => {\r\n    return {\r\n        type: \"TX\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const updateDataState = (payload) => {\r\n    return {\r\n        type: \"UPDATE_DATA_STATE\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const updateBlockchainState = (payload) => {\r\n    return {\r\n        type: \"UPDATE_BLOCKCHAIN_STATE\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const updateAppState = (payload) => {\r\n    return {\r\n        type: \"UPDATE_APP_STATE\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const entryDataState = (payload) => {\r\n    return {\r\n        type: \"ENTRY_DATA_STATE\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\nexport const deleteFieldKey = (payload) => {\r\n    return {\r\n        type: \"DELETE_FIELD_KEY\",\r\n        payload: payload,\r\n    }\r\n}\r\n\r\n","import store from \"./store\"\r\n\r\nexport const getWeb3 = async () => {\r\n    return await store.getState().blockchain.web3\r\n}\r\n\r\nexport const getWalletProvider = async () => {\r\n    return await store.getState().blockchain.walletProvider\r\n}\r\n\r\nexport const getNetworkTables = async () => {\r\n    return await store.getState().blockchain.networkTables\r\n}\r\n\r\nexport const getCurrentNetwork = async () => {\r\n    return await store.getState().blockchain.currentNetwork\r\n}\r\n\r\nexport async function getUserAccount() {\r\n    return await store\r\n        .getState()\r\n        .blockchain.account\r\n}","const initialState = {\r\n    alerts: {\r\n        error: [],\r\n        loading: [],\r\n        other: []\r\n    },\r\n    initializedApp: false,\r\n};\r\n\r\n/**\r\n * The app reducer.\r\n * Used to manage alerts and queue them in a stack last in first out\r\n * system.\r\n */\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_APP_STATE\":\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: action.payload.value,\r\n            };\r\n        case \"ALERT\":\r\n            const field = state.alerts[action.payload.alert]\r\n            if (action.payload.message)\r\n                if (action.payload.alert == \"other\")\r\n                    field.push({url: action.payload.url, message: action.payload.message})\r\n                else\r\n                field.push(action.payload.message)\r\n            else\r\n                field.pop()\r\n            return {\r\n                ...state,\r\n                alerts: {\r\n                    ...state.alerts,\r\n                    [action.payload.alert]: field\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n","const initialState = {\r\n  account: null,\r\n  smartContracts: [],\r\n  web3: null,\r\n  currentNetwork: null,\r\n  networkTables: null,\r\n  walletProvider: null,\r\n  pendingTx: [], \r\n};\r\n\r\n\r\n/**\r\n * The blockchain reducer. \r\n * In the case of dispatches related directly to the state it\r\n * simply updates that respective field with the new value\r\n * In the case of transactions (TX) it creates a 'stack' last in\r\n * first out to queue pending transaction messages.\r\n */\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_BLOCKCHAIN_STATE\":\r\n      return {\r\n        ...state,\r\n        [action.payload.field]: action.payload.value,\r\n      };\r\n    case \"TX\":\r\n      var txState = state.pendingTx\r\n      if(action.payload.message)\r\n        txState.push(action.payload.message)\r\n      else\r\n        txState.pop()\r\n      return {\r\n        ...state,\r\n        pendingTx: txState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","import { actions, roles } from \"../../components/utils/Roles\";\n\nconst initialState = {\n  allVehicles: {},\n  displayCurrency: \"GBP\",\n  myRole: roles.VIEWER_ROLE,\n};\n\n/**\n * The data reducer.\n * In the case of dispatching to update the data state the value\n * of the field is simply updated\n * In the case of entry data state the value is simply inserted\n * as to facilitate event triggers in the react components\n * In the case of Delete field key a certain field is deleted\n * from the state\n */\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA_STATE\":\n      return {\n        ...state,\n        [action.payload.field]: action.payload.value,\n      };\n    case \"ENTRY_DATA_STATE\":\n      let field = state[action.payload.field]\n      if (action.payload.subfield)\n        field = field[action.payload.subfield]\n      field[action.payload.key] = action.payload.value\n      if (action.payload.subfield)\n      return {\n        ...state,\n        [action.payload.field]: {\n          ...state[action.payload.field],\n          [action.payload.subfield]:field\n        }\n      };\n      else \n      return {\n        ...state,\n        [action.payload.field]: field\n      };\n    case \"COMPLEX_DATA_MODIFY\":\n      let complex = state\n      action.payload.fields.forEach(element => {\n        complex = complex[element]\n      });\n      complex[action.payload.key] = action.payload.value\n      return {\n        ...state,\n        [action.payload.field]: field\n      };\n    case \"DELETE_FIELD_KEY\":\n      let field2 = state[action.payload.field]\n      delete field2[action.payload.key]\n      return {\n        ...state,\n        [action.payload.field]: field2\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","\r\nconst formFields = {\r\n  nrOfSteps: 4,\r\n  step: 1,\r\n  preview: \"https://s3-alpha.figma.com/hub/file/948140848/1f4d8ea7-e9d9-48b7-b70c-819482fb10fb-cover.png\",\r\n  buffer: [],\r\n  fields: {\r\n    company: \"\",\r\n    model: \"\",\r\n    vhcid: \"\",\r\n    year: \"\",\r\n    color: \"\",\r\n    body: \"\",\r\n    transmission: \"\",\r\n    fuel: \"\",\r\n    engine: \"\",\r\n    doors: \"\",\r\n    seats: \"\",\r\n    driver_side: \"\",\r\n  },\r\n  errors: {},\r\n  edit: {},\r\n  loading: false\r\n};\r\n\r\n/**\r\n * The form reducer used to propagate the form and manage\r\n * different fields in the state related to forms throuhgout the app\r\n */\r\nconst formReducer = (state = formFields, action) => {\r\n  switch (action.type) {\r\n    case \"NEXT_STEP\":\r\n      return {\r\n        ...state,\r\n        step: state.step + 1,\r\n      };\r\n    case \"PREV_STEP\":\r\n      return {\r\n        ...state,\r\n        step: state.step - 1,\r\n      };\r\n    case \"UPDATE\":\r\n      return {\r\n        ...state,\r\n        fields: {\r\n          ...state.fields,\r\n          [action.payload.name]: action.payload.value\r\n        }\r\n      }\r\n    case \"UPLOAD_IMAGE\":\r\n      return {\r\n        ...state,\r\n        preview: action.payload.preview,\r\n        buffer: action.payload.buffer\r\n      }\r\n    case \"RESET\":\r\n      return {\r\n        ...formFields\r\n      }\r\n    case \"UPDATE_ENTRY\":\r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.value\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport appReducer from \"./app/appReducer\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\nimport formReducer from \"./minting/formReducer\"\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  blockchain: blockchainReducer,\n  data: dataReducer,\n  form: formReducer\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","import { Sidebar } from '../navigation/SidebarData';\r\n\r\nconst keccak256 = require('keccak256')\r\n\r\n/**\r\n * MASTER OBJECT of the roles in the app\r\n */\r\nexport const roles = {\r\n  DEFAULT_ADMIN_ROLE: \"0x00\",\r\n  MINTER_ROLE_ADMIN: keccak256(\"MINTER_ROLE_ADMIN\"),\r\n  AUTHORITY_ROLE_ADMIN: keccak256(\"AUTHORITY_ROLE_ADMIN\"),\r\n  MINTER_ROLE: keccak256(\"MINTER_ROLE\"),\r\n  AUTHORITY_ROLE: keccak256(\"AUTHORITY_ROLE\"),\r\n  USER_ROLE: keccak256(\"USER_ROLE\"),\r\n  VIEWER_ROLE: keccak256(\"VIEWER_ROLE\"),\r\n  ODOMETER_ROLE: keccak256(\"ODOMETER_ROLE\"),\r\n  GARAGE_ROLE: keccak256(\"GARAGE_ROLE\")\r\n}\r\n\r\nexport const actions = {\r\n  GIVE: \"grantRole\",\r\n  REVOKE: \"revokeRole\",\r\n}\r\n\r\n/**\r\n * The admin options for the DEFAULT_ADMIN_ROLE\r\n */\r\nconst DEFAULT_ADMIN_OPTIONS = {\r\n  roleManaging: {\r\n    actions: [actions.GIVE, actions.REVOKE],\r\n    roles: (({ MINTER_ROLE, MINTER_ROLE_ADMIN, AUTHORITY_ROLE, AUTHORITY_ROLE_ADMIN, ODOMETER_ROLE }) => ({ MINTER_ROLE, MINTER_ROLE_ADMIN, AUTHORITY_ROLE, AUTHORITY_ROLE_ADMIN, ODOMETER_ROLE }))(roles)\r\n  },\r\n  vehicleBurning: true,\r\n  setOdometers: true\r\n}\r\n\r\n/**\r\n * The admin options for the MINTER_ADMIN_ROLE\r\n */\r\nconst MINTER_ADMIN_OPTIONS = {\r\n  roleManaging: {\r\n    actions: [actions.GIVE, actions.REVOKE],\r\n    roles: (({ MINTER_ROLE }) => ({ MINTER_ROLE }))(roles)\r\n  } ,\r\n  vehicleBurning: false,\r\n  setOdometers: false\r\n} \r\n\r\nconst AUTHORITY_ADMIN_OPTIONS = {\r\n  roleManaging: {\r\n    actions: [actions.GIVE, actions.REVOKE],\r\n    roles: (({ AUTHORITY_ROLE, ODOMETER_ROLE }) => ({ AUTHORITY_ROLE, ODOMETER_ROLE }))(roles)\r\n  },\r\n  vehicleBurning: true,\r\n  setOdometers: true,\r\n}\r\n\r\nconst EMPTY_OPTIONS = {\r\n  actions: [],\r\n  roles: []\r\n}\r\n\r\nexport const superUsers = [roles.DEFAULT_ADMIN_ROLE, roles.AUTHORITY_ROLE, roles.AUTHORITY_ROLE_ADMIN]\r\n\r\n\r\n/**\r\n * Returns the admin options for the role provided.\r\n * This is used in combination with the role the user is\r\n * assigned in the app.\r\n * @param role the role of the user\r\n * @returns {Object} object with the options\r\n */\r\nexport const getAdminOptionsFor = (role) => {\r\n  switch (role) {\r\n    case roles.MINTER_ROLE_ADMIN:\r\n      return MINTER_ADMIN_OPTIONS\r\n    case roles.AUTHORITY_ROLE_ADMIN:\r\n      return AUTHORITY_ADMIN_OPTIONS\r\n    case roles.DEFAULT_ADMIN_ROLE:\r\n      return DEFAULT_ADMIN_OPTIONS\r\n    default:\r\n      return EMPTY_OPTIONS\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the appropriate sidebar for each role.\r\n * This is used in combination with the role the user is\r\n * assigned in the app.\r\n * @param the role of the user\r\n * @returns {Object} sidebar object\r\n */\r\nexport const getSidebarFor = (role) => {\r\n  switch (role) {\r\n    case roles.VIEWER_ROLE:\r\n      return Sidebar.VIEWER\r\n    case roles.USER_ROLE:\r\n      return Sidebar.USER\r\n    case roles.AUTHORITY_ROLE:\r\n      return Sidebar.AUTHORITY\r\n    case roles.MINTER_ROLE:\r\n      return Sidebar.MINTER\r\n    case roles.DEFAULT_ADMIN_ROLE:\r\n      return Sidebar.DEFAULT_ADMIN\r\n    case roles.MINTER_ROLE_ADMIN:\r\n      return Sidebar.MINTER_ADMIN\r\n    case roles.AUTHORITY_ROLE_ADMIN:\r\n      return Sidebar.AUTHORITY_ADMIN\r\n      case roles.GARAGE_ROLE:\r\n        return Sidebar.GARAGE\r\n  }\r\n}\r\n\r\n\r\nconst pageAccess = {\r\n  EDIT: [roles.GARAGE_ROLE],\r\n  GARAGE: [roles.GARAGE_ROLE],\r\n  MINT: [roles.MINTER_ROLE, roles.MINTER_ROLE_ADMIN, roles.DEFAULT_ADMIN_ROLE],\r\n  VERIFY: [roles.AUTHORITY_ROLE, roles.AUTHORITY_ROLE_ADMIN, roles.DEFAULT_ADMIN_ROLE],\r\n  ADMIN: [roles.MINTER_ROLE_ADMIN, roles.AUTHORITY_ROLE_ADMIN, roles.DEFAULT_ADMIN_ROLE]\r\n}\r\n\r\n/**\r\n * Checks if the path being accessed is accessible to the user provided\r\n * @param pathBeingAccessed the path we are trying to access\r\n * @param userRole the role of the user\r\n * @returns {boolean}\r\n */\r\nexport const checkRoutePermissionFor = (pathBeingAccessed, userRole) => {\r\n  switch (pathBeingAccessed) {\r\n    case \"/admin\":\r\n      return pageAccess.ADMIN.some(allowedRole => allowedRole == userRole)\r\n    case \"/mint\":\r\n      return pageAccess.MINT.some(allowedRole => allowedRole == userRole)\r\n    case \"/verify\":\r\n      return pageAccess.VERIFY.some(allowedRole => allowedRole == userRole)\r\n    default:\r\n      return true\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as GameIcons from 'react-icons/gi';\r\nimport * as BiIcons from \"react-icons/bi\";\r\n\r\n\r\nconst ViewerSidebar = [\r\n    {\r\n        title: 'Market',\r\n        path: '/',\r\n        icon: <BiIcons.BiStore />,\r\n        cName: 'nav-text'\r\n    }\r\n]\r\n\r\n\r\nconst UserSidebar = [\r\n    ...ViewerSidebar,\r\n    {\r\n        title: 'My Vehicles',\r\n        path: '/myvehicles',\r\n        icon: <AiIcons.AiFillCar />,\r\n        cName: 'nav-text'\r\n    },\r\n];\r\n\r\nconst GarageSidebar = [\r\n    ...UserSidebar,\r\n    {\r\n        title: 'Garage',\r\n        path: '/garage',\r\n        icon: <GameIcons.GiMechanicGarage />,\r\n        cName: 'nav-text'\r\n    },\r\n];\r\n\r\nconst AuthoritySidebar = [\r\n    ...UserSidebar,\r\n    {\r\n        title: 'Verify',\r\n        path: '/verify',\r\n        icon: <AiIcons.AiOutlineFileSearch />,\r\n        cName: 'nav-text'\r\n    }\r\n];\r\n\r\nconst AdminSidebar =\r\n{\r\n    title: 'Admin',\r\n    path: '/admin',\r\n    icon: <AiIcons.AiFillWarning />,\r\n    cName: 'nav-text'\r\n}\r\n\r\nconst AuthorityAdminSidebar = [\r\n    ...AuthoritySidebar,\r\n    AdminSidebar\r\n];\r\n\r\nconst MinterSidebar = [\r\n    ...UserSidebar,\r\n    {\r\n        title: 'Mint',\r\n        path: '/mint',\r\n        icon: <FaIcons.FaPlusCircle />,\r\n        cName: 'nav-text'\r\n    }\r\n];\r\n\r\nconst MinterAdminSidebar = [\r\n    ...MinterSidebar,\r\n    AdminSidebar\r\n];\r\n\r\nconst DefaultAdminSidebar = [\r\n    ...UserSidebar,\r\n    {\r\n        title: 'Mint',\r\n        path: '/mint',\r\n        icon: <FaIcons.FaPlusCircle />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Verify',\r\n        path: '/verify',\r\n        icon: <AiIcons.AiOutlineFileSearch />,\r\n        cName: 'nav-text'\r\n    },\r\n    AdminSidebar\r\n];\r\n\r\n\r\n\r\nexport const Sidebar = {\r\n    VIEWER: ViewerSidebar,\r\n    USER: UserSidebar,\r\n    AUTHORITY: AuthoritySidebar,\r\n    AUTHORITY_ADMIN: AuthorityAdminSidebar,\r\n    MINTER: MinterSidebar,\r\n    MINTER_ADMIN: MinterAdminSidebar,\r\n    GARAGE: GarageSidebar,\r\n    DEFAULT_ADMIN: DefaultAdminSidebar\r\n}","export function findKeyOfValueInObj(theValue, obj) {\r\n    for (const [key, value] of Object.entries(obj)) {\r\n        if (value.includes(theValue))\r\n            return key\r\n    }\r\n}\r\n\r\n/**\r\n * Grabs all of the values from a nested object's values and puts them in a list\r\n * @param obj the obj for which we wish to extract all of its values\r\n */\r\nexport function grabAllValuesFromObject(obj) {\r\n    var allValues = []\r\n    for (var i = 0; i < Object.values(obj).length; i++) {\r\n        for (var element of Object.values(obj)[i]) {\r\n            allValues.push(element)\r\n        }\r\n    }\r\n    return allValues\r\n}\r\n\r\nexport function isValueInObject(value, obj) {\r\n    for (const element of Object.values(obj)) {\r\n        if (element.includes(value))\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * Splits a list to n subsequent lists\r\n * @param list the list we wish to split\r\n * @param n the number of sublists we wish to have\r\n * @returns {List} the list of sublists\r\n */\r\nexport function listToNSublists(list, n) {\r\n    var sublists = []\r\n    while (list.length) {\r\n        sublists = [...sublists, list.splice(0, n)]\r\n    }\r\n    return sublists\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n/**\r\n * Calculates the greatest common divisor\r\n * @param a first number\r\n * @param b second number\r\n * @returns {Number} the greatest common divisor\r\n */\r\nexport function gcd(a, b) {\r\n    if (b == 0) {\r\n        return a\r\n    }\r\n    return gcd(b, a % b)\r\n}\r\n\r\n/**\r\n * Formats the address provided and shortens it to allow for space\r\n * restrictions.\r\n * @param address the address we wish to shorten\r\n * @returns {String} the formatted address\r\n */\r\nexport function formatAccountAddress(address) {\r\n    if (address) {\r\n        var length = address.length\r\n        return address.slice(0, 6) + \"...\" + address.slice(length - 4, length)\r\n    }\r\n}","\r\n/**\r\n * Function which mixes and radomizes a string.\r\n * @param string the vehicle in question\r\n * @returns {String} the randomized string\r\n */\r\nexport const scramble = (string) => {\r\n\r\n    var x = string.split('').sort(function () { return 0.5 - Math.random() }).join('');\r\n    function substitute(str) {\r\n        var pos = Math.floor(Math.random() * str.length);\r\n        return str.substring(0, pos) + getRandomLetter() + str.substring(pos + 1);\r\n    }\r\n    function getRandomLetter() {\r\n        var letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        var pos = Math.floor(Math.random() * letters.length);\r\n        return letters.charAt(pos);\r\n    }\r\n    for (var i = 0; i < randomIntFromInterval(1, 10); i++) {\r\n        x = string.split('').sort(function () { return 0.5 - Math.random() }).join('');\r\n        x = substitute(x)\r\n    }\r\n    return x\r\n}\r\n\r\nexport function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n","import { create } from \"ipfs-http-client\";\r\nimport { callChainFunction } from \"../../components/utils/GatewayParser\";\r\nimport { randomIntFromInterval, scramble } from \"../../components/utils/Cryptography\";\r\nimport { alerts } from \"../app/appActions\";\r\nimport { getUserAccount } from \"../reduxUtils\";\r\nimport store from \"../store\";\r\n\r\nexport const nextStep = () => {\r\n  return {\r\n    type: \"NEXT_STEP\",\r\n  };\r\n};\r\n\r\nexport const prevStep = () => {\r\n  return {\r\n    type: \"PREV_STEP\",\r\n  };\r\n};\r\n\r\nexport const formUpdate = (payload) => {\r\n  return {\r\n    type: \"UPDATE\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const updateEntry = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ENTRY\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const uploadImage = (payload) => {\r\n  return {\r\n    type: \"UPLOAD_IMAGE\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const resetForm = () => {\r\n  return {\r\n    type: \"RESET\",\r\n  };\r\n};\r\n\r\n/**\r\n * Function which assembles the data from the redux form store and uploads it to ipfs.\r\n * The image is uploaded to ipfs then the hash of the image is embedded into the object \r\n * which itself is uploaded to ipfs.\r\n * The generated hash is then sent to the blockchain as parameter to the mint function\r\n * requiring a token URI.\r\n */\r\nexport const createMetaDataAndMint = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const form = await store.getState().form\r\n      const ipfsClient = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n      const image = (await ipfsClient.add(form.buffer)).path;\r\n      const metaDataObj = {\r\n        image: image,\r\n        created: Date.now(),\r\n        updated: Date.now(),\r\n        attributes: form.fields,\r\n        nonce1: scramble(await getUserAccount()),\r\n        nonce2: randomIntFromInterval(1, 1000000)\r\n      };\r\n      const vehicleHash = (await ipfsClient.add(JSON.stringify(metaDataObj))).path;\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: true })\r\n      );\r\n      await dispatch(callChainFunction(\"mint\", [vehicleHash]))\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: false })\r\n      );\r\n      dispatch(resetForm())\r\n\r\n    } catch (err) {\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: false })\r\n      );\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    };\r\n  };\r\n};\r\n\r\n/**\r\n * Similar functionality to the createMetaDataAndMint function however on this ocassion\r\n * the vehicle is updated with a new hash. We make sure that there has been a change\r\n * in the information before data is modified in the new hash.\r\n */\r\nexport const updateMetadata = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n\r\n      const form = await store.getState().form\r\n      const ipfsClient = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n\r\n      let vehicle = form.edit\r\n\r\n      vehicle.attributes = form.fields\r\n\r\n      var vehicleId = vehicle.injected.id\r\n      \r\n      vehicle.updated = Date.now()\r\n\r\n\r\n      if (form.buffer.length != 0) {\r\n        const image =  (await ipfsClient.add(form.buffer)).path;\r\n        vehicle.image = image\r\n      } else {\r\n        var removeLinkFrame = vehicle.image.indexOf(\"/ipfs/\")\r\n        if(removeLinkFrame!=-1){\r\n          vehicle.image = vehicle.image.slice(removeLinkFrame + 6, vehicle.image.length)\r\n        }\r\n      }\r\n\r\n      const newVehicle = Object.assign({}, vehicle);\r\n    \r\n      delete newVehicle.injected\r\n\r\n      const vehicleHash =  (await ipfsClient.add(JSON.stringify(newVehicle))).path;\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: true })\r\n      );\r\n        \r\n\r\n      await dispatch(await callChainFunction(\"setTokenURI\", [vehicleId, vehicleHash]))\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: false })\r\n      );\r\n      dispatch(resetForm())\r\n\r\n    } catch (err) {\r\n      dispatch(\r\n        updateEntry({ name: \"loading\", value: false })\r\n      );\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    };\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","import web3 from \"web3\";\r\nimport store from \"../../redux/store\";\r\n\r\nexport const WeiToEth = (amount) => {\r\n    return web3.utils.fromWei(String(amount), 'ether')\r\n}\r\n\r\n/**\r\n * Grabs a list of all official currencies from the COINBASE API\r\n * @returns {String} the list of all currencies in the world\r\n */\r\nexport const fetchAllCurrencies = async () => {\r\n    const request = new URL(\"https://api.coinbase.com/v2/currencies\");\r\n    const response = await (await fetch(request)).json();\r\n    return response.data\r\n}\r\n\r\nexport const EthToWei = (amount) => {\r\n    return web3.utils.toWei(String(amount), 'ether')\r\n}\r\n\r\nexport function roundToNDigits(digits,num) {\r\n    return +(Math.round(num + `e+${digits}`) + `e-${digits}`);\r\n}\r\n\r\n/**\r\n * Finds the exchange rate between 2 currencies\r\n * @param from the currency we wish to convert from\r\n * @param to the currecy we wish to convert to\r\n */\r\nexport const fetchRate = async (from, to) => {\r\n    var request = new URL(\"https://api.coinbase.com/v2/prices/\" + from + \"-\" + to + \"/spot\");\r\n    var response = await (await fetch(request)).json();\r\n    if (response.hasOwnProperty(\"errors\")) {\r\n        request = new URL(\"https://api.coinbase.com/v2/prices/\" + to + \"-\" + from + \"/spot\");\r\n        response = await (await fetch(request)).json();\r\n        return 1/parseFloat(response.data.amount)\r\n    }\r\n    return parseFloat(response.data.amount)\r\n}\r\n\r\n/**\r\n * Returns the exchanged value from one currency to another\r\n * @param amount the amount of the from currency we wish to convert\r\n * @param from the currency we wish to convert from\r\n * @param to the currecy we wish to convert to\r\n */\r\nexport const currencyToCurrency = async (amount, from, to) => {\r\n    const rate = await fetchRate(from, to)\r\n    return amount * rate\r\n}\r\n\r\n/**\r\n * Converts wei to the currency selected by the user as favorite in the app\r\n * @param price the price in wei we wish to convert to display currency\r\n */\r\nexport const weiToMyCurrency = async (price) => {\r\n\r\n    let myPrefferedCurrency = await store\r\n        .getState()\r\n        .data.displayCurrency\r\n\r\n    let priceInETH = WeiToEth(price)\r\n\r\n    if (myPrefferedCurrency == \"ETH\")\r\n        return parseFloat(priceInETH)\r\n\r\n    if (myPrefferedCurrency == \"BTC\")\r\n    {\r\n        var price1 = await currencyToCurrency(priceInETH, \"ETH\", \"USD\")\r\n        var price2 = await currencyToCurrency(price1, \"USD\", \"BTC\")\r\n        return roundToNDigits(5,price2)\r\n    }\r\n\r\n    let priceInUserCurrency = await currencyToCurrency(priceInETH, \"ETH\", myPrefferedCurrency)\r\n\r\n    return roundToNDigits(2,priceInUserCurrency)\r\n}\r\n\r\nexport const myCurrencyToWei = async (price) => {\r\n\r\n    let myPrefferedCurrency = await store\r\n        .getState()\r\n        .data.displayCurrency\r\n\r\n    const priceInETH = await currencyToCurrency(price, myPrefferedCurrency, \"ETH\")\r\n    const priceInWei = EthToWei(priceInETH)\r\n    return priceInWei\r\n}","import { roles } from \"../../components/utils/Roles\";\r\nimport { weiToMyCurrency } from \"../../components/utils/Exchange\";\r\nimport store from \"../store\";\r\nimport { getRole, callViewChainFunction } from \"../../components/utils/GatewayParser\";\r\nimport { alerts, updateDataState } from \"../app/appActions\";\r\nimport { getUserAccount } from \"../reduxUtils\";\r\n\r\nvar ipfsGateways = [\"gateway.ipfs.io\",\"ipfs.io\",\"dweb.link\",\"infura-ipfs.io\",\"via0.com\",]\r\n\r\n/**\r\n * This function assembles the data from a request into vehicle objects used\r\n * throught the application\r\n * @param response the response from the blockchain\r\n * @returns {Object} Object of vehicle objects\r\n */\r\nasync function assembleVehicleObjects(response) {\r\n\r\n  let assembled = {}\r\n\r\n  for (var i = 0; i < response.ids.length; i++) {\r\n    var id = response.ids[i]\r\n    var URI = response.uris[i]\r\n    var owner = response.owners[i]\r\n    var garage = response.garages[i]\r\n\r\n    var isForSale = response.sales[i]\r\n    var price = response.prices[i]\r\n    var isAuction = response.auctions[i]\r\n    var topBidder = response.bidders[i]\r\n\r\n    assembled[id] = {}\r\n\r\n    let vehicleMetadata = null\r\n\r\n    var k  = 0\r\n    while (k < ipfsGateways.length) {\r\n      var r = await fetch(\"https://\" + ipfsGateways[k] + \"/ipfs/\" + URI)\r\n      if (r.status!=200) {\r\n        k++;\r\n        continue;\r\n      }\r\n      vehicleMetadata = await r.json()\r\n      break;\r\n    }\r\n\r\n    if (vehicleMetadata==null) {\r\n      throw Error(\"Cannot fetch URI from any Gateway.\")\r\n    }\r\n\r\n    vehicleMetadata.image = \"https://\" + ipfsGateways[k] + \"/ipfs/\" + vehicleMetadata.image\r\n\r\n    vehicleMetadata.injected = {}\r\n    vehicleMetadata.injected.id = id\r\n    vehicleMetadata.injected.owner = owner\r\n    vehicleMetadata.injected.garage = garage\r\n\r\n    if (isForSale) {\r\n      vehicleMetadata.injected.sale = true\r\n      vehicleMetadata.injected.price = price\r\n      vehicleMetadata.injected.display_price = await weiToMyCurrency(price)\r\n      if (isAuction) {\r\n        vehicleMetadata.injected.auction = true\r\n        vehicleMetadata.injected.topBidder = topBidder\r\n      }\r\n      else {\r\n        vehicleMetadata.injected.auction = false\r\n      }\r\n    }\r\n    else {\r\n      vehicleMetadata.injected.sale = false\r\n    }\r\n    assembled[id] = vehicleMetadata;\r\n  }\r\n\r\n  return assembled;\r\n}\r\n\r\n/**\r\n * This call a data refresh on a specific vehicle which is then assembled into\r\n * a vehicle object\r\n * @param tokenId the token you with to do the refresh on.\r\n * @returns {Object} Object of vehicle objects\r\n */\r\nexport async function refreshVehicle(tokenId) {\r\n  const response = await callViewChainFunction(\"refreshOne\", [tokenId])\r\n  return await assembleVehicleObjects(response)\r\n}\r\n\r\n/**\r\n * Wrapper function which grabs all the vehicle information from the blockchain\r\n * @return {bruh}\r\n */\r\nasync function getEverything() {\r\n\r\n  var startTime = performance.now()\r\n\r\n  var a = performance.now()\r\n  const response = await callViewChainFunction(\"getEverything\", [])\r\n  var b = performance.now()\r\n  const assembled = await assembleVehicleObjects(response)\r\n\r\n  var endTime = performance.now()\r\n  console.log(\"performance for ALL\", endTime - startTime)\r\n  console.log(\"performance for a\", b - a)\r\n  return assembled\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Updates the redux store value of the allVehicles object to the newly fetched\r\n * data of all the vehicles from the blockchain\r\n */\r\nexport function getDefaultVehicles() {\r\n  return async (dispatch) => {\r\n    var all = await getEverything()\r\n    console.log(all)\r\n    dispatch(updateDataState({ field: \"allVehicles\", value: all }));\r\n  }\r\n}\r\n\r\n/**\r\n * Clears any existance of user data from the app. In this case removes the role\r\n * stored in the app's store.\r\n */\r\nexport const clearMyData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(updateDataState({ field: \"myRole\", value: roles.VIEWER_ROLE }));\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the authenticated data for the app when the user logs in. In this case\r\n * it fetches the role and updates it in the redux store.\r\n */\r\nexport function getAuthenticatedData() {\r\n  return async (dispatch) => {\r\n    await dispatch(updateDataState({ field: \"myRole\", value: await getRole(await getUserAccount()) }));\r\n  }\r\n}\r\n\r\n/**\r\n * Fethces the data for the current user grabbing the default vehicles and the authenticated data if the user\r\n * is logged in or just the default vehicles if the user is not logged in.\r\n */\r\nexport const fetchMyData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(alerts({ alert: \"loading\", message: \"Fetching data...\" }))\r\n    if (await store.getState().blockchain.account || await store.getState().blockchain.walletProvider) {\r\n      await dispatch(getDefaultVehicles())\r\n      await dispatch(getAuthenticatedData());\r\n    }\r\n    else {\r\n      await dispatch(getDefaultVehicles())\r\n    }\r\n    dispatch(alerts({ alert: \"loading\" }))\r\n  };\r\n};\r\n\r\n/**\r\n * Updates the app's redux store value for the display currency to the one provided\r\n * @param value The currency symbol we wish to use throughout the app.\r\n */\r\nexport const updatePrefferedCurrency = (value) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateDataState({ field: \"displayCurrency\", value: value }));\r\n  };\r\n};\r\n\r\n/**\r\n * Refreshes each display price for each vehicle to the one currently stored in the app's\r\n * redux store. It applies conversion of the original base price in Wei to this new currency\r\n * for which we wish to display. Then updates the object vehicles with the new data.\r\n */\r\nexport const refreshDisplayPrices = () => {\r\n  return async (dispatch) => {\r\n    dispatch(alerts({ alert: \"loading\", message: \"Refreshing display prices.\" }))\r\n    try {\r\n\r\n      let forsale = await store.getState().data.allVehicles\r\n\r\n      for (var key of Object.keys(forsale)) {\r\n        if (forsale[key].injected.sale)\r\n          forsale[key].injected.display_price = await weiToMyCurrency(forsale[key].injected.price)\r\n      }\r\n\r\n      dispatch(updateDataState({ field: \"allVehicles\", value: forsale }));\r\n\r\n    } catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n    dispatch(alerts({ alert: \"loading\" }))\r\n  };\r\n}","import { alerts, deleteFieldKey, entryDataState, updateDataState } from \"../app/appActions\";\r\nimport store from \"../store\";\r\nimport { getUserAccount } from \"../reduxUtils\";\r\nimport { getContractFor } from \"../../components/utils/GatewayParser\";\r\nimport { refreshVehicle } from \"../data/dataActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\n/**\r\n * Function which refreshes the information/data of a certain token.\r\n * Updates the app's vehicles object with the freshly pulled data about\r\n * that vehicle.\r\n * @param tokenId the token for which we wish to refresh its data\r\n */\r\nfunction refreshVehicleInfo(tokenId) {\r\n    return async (dispatch) => {\r\n        var allVehicles = await store.getState().data.allVehicles\r\n        allVehicles[tokenId] = (await refreshVehicle(tokenId))[tokenId]\r\n        dispatch(updateDataState({ field: \"allVehicles\", value: allVehicles }));\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Function which removes a certain vehicle from the app's vehicle object\r\n * permanently.\r\n * @param token the vehicle we wish to remove\r\n */\r\nfunction removeVehicleFromAll(token) {\r\n    return async (dispatch) => {\r\n        dispatch(deleteFieldKey({ field: \"allVehicles\", key: token }));\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Function which subscribes to an event.\r\n * It automatically finds the specific contract for the event\r\n * we are trying to subscribe to and creates an event listener\r\n * on that object.\r\n * On event trigger refresh the data about that vehicle\r\n * @param eventName the event we are trying to subscribe to\r\n */\r\nexport function subscribeToEvent(eventName) {\r\n    return async (dispatch) => {\r\n        const smartContract = await getContractFor(\"events\", eventName)\r\n        smartContract.events[eventName]({}, (error, event) => {\r\n            console.log('New Refresh Event Detected: ', event)\r\n            if (!error) {\r\n                dispatch(refreshVehicleInfo(event.returnValues.tokenId))\r\n            }\r\n            else {\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Function which subscribes to the event Transfer\r\n * If the transfer is to the address 0x000.. then remove that vehicle from the\r\n * all vehicle object otheriwse just refresh the info on that vehicle\r\n */\r\nexport function subscribeToTransfers() {\r\n    return async (dispatch) => {\r\n        const smartContract = (await getContractFor(\"events\", \"Transfer\"))\r\n        smartContract.events.Transfer({\r\n        }, function (error, event) {\r\n            console.log(\"Transfer\", event)\r\n            if (!error) {\r\n                if (event.returnValues.to == \"0x0000000000000000000000000000000000000000\") {\r\n                    dispatch(removeVehicleFromAll(event.returnValues.tokenId))\r\n                }\r\n                else {\r\n                    dispatch(refreshVehicleInfo(event.returnValues.tokenId))\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Function which subscribes to the event Approval.\r\n * On event trigger modify the approval field in the data redux.\r\n */\r\nexport function subscribeToApproval() {\r\n    return async (dispatch) => {\r\n        const smartContract = (await getContractFor(\"events\", \"Approval\"))\r\n        const thisAccount = await getUserAccount()\r\n        smartContract.events.Approval({\r\n        }, function (error, event) {\r\n            console.log(\"NewApproval\", event)\r\n            if (!error) {\r\n                if (event.returnValues.owner == thisAccount) {\r\n                    dispatch(updateDataState({ field: \"approval\", value: event.returnValues.tokenId }));\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","import Web3 from \"web3\";\r\nimport Gateway from \"../../api/resources/Gateway.json\";\r\nimport Vehicle from \"../../api/resources/Vehicle.json\";\r\nimport Roles from \"../../api/resources/Roles.json\";\r\nimport Odometer from \"../../api/resources/Odometer.json\";\r\nimport Management from \"../../api/resources/Management.json\";\r\nimport NetworkTables from \"../../api/resources/NetworkTables.json\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport MetaMaskOnboarding from '@metamask/onboarding';\r\nimport { alerts, updateAppState, updateBlockchainState } from \"../app/appActions\";\r\nimport { clearMyData, getAuthenticatedData } from \"../data/dataActions\";\r\nimport { subscribeToApproval, subscribeToEvent, subscribeToNewGarageApproval, subscribeToNewPrice, subscribeToNewTopBidder, subscribeToSaleStatus, subscribeToTransfers } from \"./eventSubscriber\";\r\nimport { getCurrentNetwork, getNetworkTables, getWalletProvider, getWeb3 } from \"../reduxUtils\";\r\nimport { getNetworkRpcUrl } from \"../../components/utils/GatewayParser\";\r\n\r\nconst CONTRACT_LIST = [Gateway, Vehicle, Roles, Odometer, Management]\r\n\r\n\r\n/**\r\n * Function which detects the user's wallet provider in their browser.\r\n * In our instance if they do not have a browser wallet we start the\r\n * process of onboarding them by redirecting to metamask\r\n * @returns {Object} the wallet provider\r\n */\r\nconst fetchWalletProvider = async () => {\r\n  const provider = await detectEthereumProvider({ timeout: 5 })\r\n  if (!provider) {\r\n    new MetaMaskOnboarding().startOnboarding();\r\n    throw Error(\"No WEB3 provider detected. Please install a WEB3 wallet such as MetaMask.\")\r\n  }\r\n  return provider\r\n}\r\n\r\n\r\n/**\r\n * Rpc request to fetch the user's addresses from their wallet\r\n * @param provider the user's wallet provider\r\n * @returns {List[Strings]} the chain as a String\r\n */\r\nconst fetchWalletAccounts = async (provider) => {\r\n  const accounts = await provider.request({\r\n    method: \"eth_requestAccounts\",\r\n  });\r\n  if (accounts.length == 0)\r\n    throw Error(\"No account in list.\")\r\n  return accounts[0]\r\n}\r\n\r\n/**\r\n * Rpc request to fetch the user's current chain from their wallet\r\n * @param provider the user's wallet provider\r\n * @returns {String} the chain as a String\r\n */\r\nconst fetchWalletChain = async (provider) => {\r\n  return await provider.request({\r\n    method: \"eth_chainId\",\r\n  });\r\n}\r\n\r\n/**\r\n * Metamask rpc request to add a newtork to the wallet's network list/book\r\n * It uses templates from the NetworkTables file to generate that new network in\r\n * the user's wallet.\r\n * @param newNetwork the network we wish to add to the user\r\n */\r\nconst addChain = async (newNetwork) => {\r\n  (await getWalletProvider()).request({\r\n    method: 'wallet_addEthereumChain',\r\n    params: [NetworkTables.networks[newNetwork]]\r\n  });\r\n}\r\n\r\n/**\r\n * Metamask rpc request to change the wallet's network to the one provided in the params\r\n * @param newNetwork the network we wish to switch the user to\r\n */\r\nconst switchChain = async (newNetwork) => {\r\n  (await getWalletProvider()).request({\r\n    method: 'wallet_switchEthereumChain',\r\n    params: [{ chainId: newNetwork }]\r\n  });\r\n}\r\n\r\n/**\r\n * This function check if the newNetwork we are trying to switch to is in the ones that come as default\r\n * for metamask which are 0x4,0x3,0x1\r\n * If it does then simply switch to them. If not add the network to the user's wallet.\r\n * @param newNetwork the network we wish to switch to\r\n */\r\nexport const addOrSwitchNetwork = async (newNetwork) => {\r\n  if ([\"0x4\", \"0x3\", \"0x1\"].includes(newNetwork))\r\n    await switchChain(newNetwork)\r\n  else\r\n    await addChain(newNetwork)\r\n}\r\n\r\n/**\r\n * Updates the redux store value of the app wallet provider used throught the entire application.\r\n * This could be providers such as: Metamask, Walletconnect, etc.\r\n * @param wallet browser extension wallet instance\r\n */\r\nexport const updateWalletProvider = (wallet) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateBlockchainState({ field: \"walletProvider\", value: wallet }))\r\n  }\r\n}\r\n\r\n/**\r\n * Updates the redux store value of the app web3 instance used throught the entire application.\r\n * @param provider this is the web3 instance we are trying to set as the app web3.\r\n */\r\nexport const updateWeb3 = (provider) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateBlockchainState({ field: \"web3\", value: new Web3(provider) }))\r\n  }\r\n}\r\n\r\n/**\r\n * Updates the redux store value of the app's main user account to the one provided in the params.\r\n * Also validates if the address provided is correct\r\n * @param account the account address we wish to set as the app account\r\n */\r\nexport const updateAppAccount = (account) => {\r\n  return async (dispatch) => {\r\n    if (account)\r\n      account = Web3.utils.toChecksumAddress(account)\r\n    dispatch(updateBlockchainState({ field: \"account\", value: account }));\r\n  };\r\n};\r\n\r\n/**\r\n * Updates the redux store value of the app network used throught the entire application.\r\n * It first checks if the new network we are trying to switch to is in the networks the app\r\n * supports. If it is directly switch to it. If not switch the network to the first one the app supports.\r\n * @param newNetwork this is the network that we are trying to switch to.\r\n */\r\nexport const updateAppNetwork = (newNetwork) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const networkTables = await getNetworkTables()\r\n      if (!(newNetwork in networkTables.networks))\r\n        await addOrSwitchNetwork(Object.keys(networkTables.networks)[0])\r\n      else\r\n        dispatch(updateBlockchainState({ field: \"currentNetwork\", value: newNetwork }))\r\n    }\r\n    catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Initialization function used to let the app know it is \r\n * time to start rendering after everything has been mounted.\r\n * It pulls all the networks the app is deployed from the networkTables.json file\r\n * and sets the default app network to the first network in that file.\r\n */\r\nexport const init = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await dispatch(updateAppState({ field: \"initializedApp\", value: true }))\r\n      await dispatch(updateBlockchainState({ field: \"networkTables\", value: NetworkTables }))\r\n      await dispatch(updateAppNetwork(Object.keys(NetworkTables.networks)[0]))\r\n    }\r\n    catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Aggregate function to login a user from a browser embedded wallet.\r\n * If the user is on the same network as the app is currently on just load\r\n * the smart contracts. Otherwise update the app network with the user's network.\r\n */\r\nexport const login = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const provider = await fetchWalletProvider()\r\n      const account = await fetchWalletAccounts(provider)\r\n      const network = await fetchWalletChain(provider)\r\n      await dispatch(updateWalletProvider(provider))\r\n      await dispatch(updateWeb3(provider))\r\n      await dispatch(updateAppAccount(account));\r\n      if (network == await getCurrentNetwork()) {\r\n        //await dispatch(getAuthenticatedData())\r\n        await dispatch(loadSmartContracts())\r\n        //await dispatch(subscribeToChainEvents())\r\n      }\r\n      else {\r\n        await dispatch(updateAppNetwork(network))\r\n      }\r\n    } catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Aggregate function to sign a user out and garbage collect anything that was related\r\n * to the user while logged in.\r\n */\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(updateWalletProvider(null))\r\n      dispatch(updateAppAccount(null));\r\n      dispatch(clearMyData())\r\n    } catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * It creates web3 smart contract objects using the web3js library by combining\r\n * the contract's abi and the contract's network address passed in from the parameters.\r\n * @param contract the json contract object aka. artifact\r\n * @param chain the chain for which we wish to create the smart contract object\r\n * @returns {Promise} a web3 smart contract object from the web3js library\r\n */\r\nasync function loadSmartContract(contract, chain) {\r\n  const web3 = await getWeb3()\r\n  const sc = new web3.eth.Contract(\r\n    contract.abi,\r\n    contract.networks[Web3.utils.hexToNumber(chain)][\"address\"]\r\n  );\r\n  return sc\r\n}\r\n\r\n/**\r\n * Aggregate function which creates a web3 smart contract object for all of the \r\n * smart contracts in our smart contract list\r\n * Updates the redux store value of the smartContracts with the list it generates.\r\n * It subscribes the app to events on the newly created smartcontract list of contracts.\r\n */\r\nexport const loadSmartContracts = () => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const currentNetwork = await getCurrentNetwork()\r\n\r\n      if (!(await getWalletProvider())) {\r\n        await dispatch(updateWeb3(await getNetworkRpcUrl(currentNetwork)))\r\n      }\r\n\r\n      var smartContractList = []\r\n      for (var i = 0; i < CONTRACT_LIST.length; i++) {\r\n        smartContractList.push(await loadSmartContract(CONTRACT_LIST[i], currentNetwork))\r\n      }\r\n\r\n      console.log(smartContractList)\r\n\r\n      await dispatch(updateBlockchainState({ field: \"smartContracts\", value: smartContractList }))\r\n\r\n      dispatch(subscribeToChainEvents())\r\n\r\n    }\r\n    catch (err) {\r\n      dispatch(alerts({ alert: \"error\", message: err.message }))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Aggregate function which subscribes the app to the following events:\r\n * - SaleStatus\r\n * - NewPrice\r\n * - NewTopBidder\r\n * - NewGarageApproval\r\n * - Transfer\r\n * - Approve\r\n */\r\nconst subscribeToChainEvents = () => {\r\n  return async (dispatch) => {\r\n    dispatch(subscribeToTransfers())\r\n    dispatch(subscribeToEvent(\"SaleStatus\") )\r\n    dispatch(subscribeToEvent(\"NewPrice\"))\r\n    dispatch(subscribeToEvent(\"NewTopBidder\"))\r\n    dispatch(subscribeToEvent(\"NewGarageApproval\"))\r\n    dispatch(subscribeToApproval())\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport '../../styles/MiniCard.css';\r\nimport * as GameIcons from \"react-icons/gi\";\r\nimport * as MDIcons from \"react-icons/md\";\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport { Avatar, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport { callViewChainFunction } from \"../utils/GatewayParser\";\r\n\r\n\r\nconst MiniCard = ({ vehicle }) => {\r\n\r\n    const data = useSelector((state) => state.data);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n\r\n\r\n    return (\r\n\r\n        <Link className=\"minicard\" to={window.location.pathname == \"/garage\" ? {\r\n            pathname: \"/edit\",\r\n            state: { metadata: vehicle },\r\n        } : {\r\n            pathname: \"/vehicle\",\r\n            state: { metadata: vehicle },\r\n        }}>\r\n\r\n            <img className=\"minicard-image\" src={vehicle.image} />\r\n\r\n            <div className=\"minicard-overlay\">\r\n                <div className=\"minicard-header\">\r\n                    <svg className=\"minicard-arc\" ><path /></svg>\r\n                    <Avatar>\r\n                        <Jazzicon diameter={40} seed={jsNumberForAddress(vehicle.injected.owner)} />\r\n                    </Avatar>\r\n                    \r\n                    <div className=\"minicard-text\">\r\n                        <h3 className=\"minicard-title\"> {vehicle.attributes.company} {vehicle.attributes.model} {vehicle.attributes.year}</h3>\r\n                        <span className=\"minicard-status\">{vehicle.injected.display_price ? vehicle.injected.display_price + \" \" + data.displayCurrency : \"Not listed.\"}</span>\r\n                    </div>\r\n\r\n                    <Stack spacing={2} display=\"flex\" align-items=\"center\" justify-content=\"center\" direction=\"row\">\r\n\r\n                        {vehicle.injected.display_price && (vehicle.injected.owner == blockchain.account) ?\r\n\r\n                            <GameIcons.GiHomeGarage></GameIcons.GiHomeGarage>\r\n                            : null}\r\n\r\n                        {blockchain.account? vehicle.injected.topBidder == blockchain.account ?\r\n\r\n                            <MDIcons.MdPriceCheck></MDIcons.MdPriceCheck>\r\n                            : null : null}\r\n\r\n                        {vehicle.injected.auction ?\r\n\r\n                            <RiIcons.RiAuctionFill></RiIcons.RiAuctionFill>\r\n                            : null}\r\n\r\n                    </Stack>\r\n\r\n\r\n\r\n                </div>\r\n                <p className=\"minicard-description\">{vehicle.attributes.transmission} - {vehicle.attributes.fuel} - {vehicle.attributes.color} </p>\r\n            </div>\r\n\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MiniCard;","import { Grid } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MiniCard from \"../vehicle_sections/MiniCard\";\r\n\r\n/**\r\n  * Component for the My Vehicles page.\r\n  * It displays only those vehicles which are owned by the user.\r\n  */\r\nfunction MyVehicles() {\r\n\r\n  const data = useSelector((state) => state.data);\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n\r\n\r\n  return (\r\n\r\n\r\n    <Grid container padding={5} spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 6, md: 12, xl: 18 }}>\r\n      {Object.values(data.allVehicles).map((vehicle, index) => {\r\n        if (vehicle.injected.owner == blockchain.account)\r\n        return (\r\n          <Grid item xs={4} sm={6} md={6} xl={6} key={index}>\r\n            <MiniCard key={index} vehicle={vehicle}></MiniCard>\r\n          </Grid>\r\n        );\r\n      })\r\n      }\r\n    </Grid>\r\n\r\n  );\r\n}\r\n\r\nexport default MyVehicles;","import { getUserAccount } from \"../../redux/reduxUtils\";\r\n\r\n/**\r\n  * Sorts a list by ascending or descending price\r\n  * @param list the list we wish to sort\r\n  * @param sortType the type of sort\r\n  */\r\nexport function sortBy(list, sortType) {\r\n    switch (sortType) {\r\n        case \"ascending\":\r\n            list.sort((a, b) => (a.injected.price > b.injected.price) ? 1 : -1)\r\n            break;\r\n        case \"descending\":\r\n            list.sort((a, b) => (a.injected.price < b.injected.price) ? 1 : -1)\r\n            break;\r\n    }\r\n    return list\r\n}\r\n\r\n/**\r\n  * THis function sorts the list to always display the vehicles which you are\r\n  * an owner of and the ones on which you have bidded.\r\n  * @param list the list we wish to sort\r\n  */\r\nexport function specialSort(list) {\r\n\r\n    list.sort(async (a, b) => { \r\n        var valueA = (a.injected.topBidder == await getUserAccount())? true : false\r\n        var valueB = (b.injected.topBidder == await getUserAccount())? true : false\r\n        return (valueA === valueB) ? 0 : valueA ? -1 : 1; \r\n    })\r\n    list.sort(async (a, b) => { \r\n        var valueA = (a.injected.owner == await getUserAccount())? true : false\r\n        var valueB = (b.injected.owner == await getUserAccount())? true : false\r\n        return (valueA === valueB) ? 0 : valueA ? -1 : 1; \r\n    })\r\n    return list\r\n}\r\n\r\n/**\r\n  * Filter a list so that each element fits between a min price and a max price\r\n  * @param list the list we wish to sort\r\n  * @param minPrice the minimum price\r\n  * @param maxPrice the maximum price\r\n  */\r\nexport function filterPriceRange(list, minPrice, maxPrice) {\r\n    return list.filter((element) => {\r\n        if (element.injected.display_price > minPrice && element.injected.display_price < maxPrice)\r\n            return true\r\n        else\r\n            return false\r\n    })\r\n}\r\n\r\n/**\r\n  * this function filters a list by the existence of a property for \r\n  * each element in the list\r\n  * @param list the list we wish to filter\r\n  * @param property the property we are filter for\r\n  */\r\nexport function filterByPropertyExistence(list, property) {\r\n    return list.filter((element) => {\r\n        return element.injected.hasOwnProperty(property);\r\n    });\r\n}\r\n\r\n/**\r\n  * Filter a list by the value of a certain property\r\n  * @param list the list we are filtering\r\n  * @param property the property we are evaluationg\r\n  * @param value the value for the property\r\n  */\r\nexport function filterByPropertyValue(list, property, value) {\r\n\r\n        return list.filter((element) => {\r\n            return element.injected[property] == value;\r\n        });\r\n}\r\n\r\n\r\n/**\r\n  * Filters a list by a filtering object. It filters objects\r\n  * which only abide by the pattern the obj dictates\r\n  * @param obj the filtering object\r\n  * @param list the list we are filtering\r\n  * @param acc the account for the user\r\n  */\r\nexport function filterByFilterObject(obj, list, acc) {\r\n\r\n    if (Object.keys(obj).length != 0) {\r\n\r\n        var temp = list\r\n        \r\n        if (obj.hasOwnProperty(\"show\")) {\r\n            temp = filterByPropertyValue(temp, obj.show, acc)\r\n        }\r\n\r\n        if (obj.hasOwnProperty(\"type\")) {\r\n            if (obj.type == \"instant\")\r\n            {\r\n                temp = filterByPropertyValue(temp, \"auction\", false)\r\n            }\r\n            else if (obj.type == \"auction\") {\r\n                temp = filterByPropertyValue(temp, \"auction\", true)\r\n            }\r\n        }\r\n\r\n        temp = temp.filter((element) => {\r\n            for (var elz of Object.keys(obj)) {\r\n                if (element.attributes.hasOwnProperty(elz) && obj[elz] != element.attributes[elz])\r\n                    return false\r\n            }\r\n            return true\r\n        })\r\n\r\n        if (obj.hasOwnProperty(\"price\")) {\r\n            sortBy(temp, obj.price)\r\n        }\r\n\r\n\r\n        return temp\r\n\r\n    } else {\r\n\r\n        return list\r\n    }\r\n\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MiniCard from \"../vehicle_sections/MiniCard\";\r\nimport { filterByFilterObject, filterPriceRange, specialSort } from \"../filters/filters\";\r\nimport { listToNSublists } from \"../utils/Other\";\r\nimport Select from 'react-select'\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport { default as Select2 } from \"@mui/material/Select\";\r\n\r\nimport { FormControl, Grid, IconButton, InputLabel, MenuItem, Tooltip, Typography } from '@mui/material';\r\nimport { fetchRate2, roundToNDigits, weiToMyCurrency } from \"../utils/Exchange\";\r\nimport { DeleteOutlined } from \"@mui/icons-material\";\r\nimport * as GameIcons from \"react-icons/gi\";\r\nimport * as MDIcons from \"react-icons/md\";\r\nimport * as FeatherIcons from \"react-icons/fi\";\r\nimport * as RiIcons from 'react-icons/ri';\r\n\r\nexport function getSaleVehicles(allVehicles) {\r\n  let saleVehicles = {}\r\n\r\n  for (const [tokenId, metadata] of Object.entries(allVehicles)) {\r\n    if (metadata.injected.sale == true) {\r\n      saleVehicles[tokenId] = metadata\r\n    }\r\n  }\r\n\r\n  return saleVehicles\r\n}\r\n\r\n/**\r\n  * The main marketplace component.\r\n  * Displays vehicles listed for sale and allows searching and filtering.\r\n  */\r\nconst Marketplace = () => {\r\n\r\n  const data = useSelector((state) => state.data);\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n\r\n  const [pageNr, setPageNr] = useState(0)\r\n  const [pages, setPages] = useState([]);\r\n\r\n  const [pool, setPool] = useState([])\r\n  const [filterObject, setFilterObject] = useState([])\r\n\r\n  const [minPrice, setMinPrice] = useState(0)\r\n  const [maxPrice, setMaxPrice] = useState(10000)\r\n  const [lowBound, setLowBound] = useState(0)\r\n  const [highBound, setHighBound] = useState(10000)\r\n\r\n  const [perPage, setPerPage] = useState(6);\r\n  const [newSelect, setNewSelect] = useState(null)\r\n\r\n\r\n  function newCopy(list) {\r\n    return list.filter(() => true);\r\n  }\r\n\r\n  /**\r\n  * Grabs all of the attributes vehicles have and puts them\r\n  * together for later use. Makes sure certain keywords are not\r\n  * added twice\r\n  * @param listOfVehicles the list of all vehicles\r\n  * @returns {Object} a collection of all attributes\r\n  */\r\n  function getAttributesCollection(listOfVehicles) {\r\n    var collection = {}\r\n    for (var vehicle of listOfVehicles) {\r\n      for (const [key, value] of Object.entries(vehicle.attributes)) {\r\n        if (!collection.hasOwnProperty(key)) {\r\n          collection[key] = []\r\n        }\r\n        if (!collection[key].includes(value)) {\r\n          collection[key].push(value)\r\n        }\r\n      }\r\n    }\r\n    return collection\r\n  }\r\n\r\n/**\r\n  * Assembles the collection of attributes into specifically designed objects\r\n  * to be used for filtering by the search.\r\n  * @param allAttributes the collection of all attributes\r\n  * @returns {Object} Object to fit in the search box functionality\r\n  */\r\n  function assembleAllKeywords(allAttributes) {\r\n    var temp = {}\r\n    for (var key of Object.keys(allAttributes)) {\r\n      for (var element of allAttributes[key]) {\r\n        if (!temp.hasOwnProperty(key))\r\n          temp[key] = []\r\n        temp[key].push({ group: key, value: element, label: element, type: key })\r\n      }\r\n    }\r\n    var temp3 = []\r\n    for (var key of Object.keys(temp)) {\r\n      var temp2 = {}\r\n      temp2.label = key\r\n      temp2.options = temp[key]\r\n      temp3.push(temp2)\r\n    }\r\n    return temp3\r\n  }\r\n\r\n\r\n\r\n  function assemblePrice() {\r\n    return [\r\n      { group: \"price\", value: \"ascending\", label: \"Ascending\" },\r\n      { group: \"price\", value: \"descending\", label: \"Descending\" }\r\n    ]\r\n  }\r\n\r\n  function assembleShow() {\r\n    return [\r\n      { group: \"show\", value: \"owner\", label: \"My Listings\" },\r\n      { group: \"show\", value: \"topBidder\", label: \"My Bids\" }\r\n    ]\r\n  }\r\n\r\n  function assembleType() {\r\n    return [\r\n      { group: \"type\", value: \"instant\", label: \"Instant\" },\r\n      { group: \"type\", value: \"auction\", label: \"Auction\" }\r\n    ]\r\n  }\r\n\r\n  /**\r\n  * Assembles object for the search bar to use as filtering.\r\n  * It updates the state of the NewSelect which is used as a pool of \r\n  * choices for the select.\r\n  * @param allAttributes all the attributes of all vehicles\r\n  * \r\n  */\r\n  function assembleSearcher(allAttributes) {\r\n    var newSelect = []\r\n    if (blockchain.account) {\r\n      newSelect.push({ label: \"Show\", options: assembleShow() })\r\n    }\r\n    newSelect.push({ label: \"Type\", options: assembleType() })\r\n    newSelect.push({ label: \"Price\", options: assemblePrice() })\r\n    newSelect = newSelect.concat(assembleAllKeywords(allAttributes))\r\n    setNewSelect(newSelect)\r\n  }\r\n\r\n  /**\r\n  * Computes the low boundary for the range slider from all of the \r\n  * vehicles listed for sale\r\n  * @param vehicles the lsit of vehicles\r\n  */\r\n  async function createLowBoundary(vehicles) {\r\n    var lowBoundary = 99999999999999999\r\n    for (var vehicle of vehicles) {\r\n      var parsedPrice = parseInt(vehicle.injected.price)\r\n      if (parsedPrice < lowBoundary) {\r\n        lowBoundary = parsedPrice\r\n      }\r\n    }\r\n    var final = await weiToMyCurrency(lowBoundary) - 10\r\n    final = final < 0 ? 0 : final\r\n    setLowBound(roundToNDigits(2, final))\r\n  }\r\n\r\n   /**\r\n  * Computes the high boundary for the range slider from all of the \r\n  * vehicles listed for sale\r\n  * @param vehicles the lsit of vehicles\r\n  */\r\n  async function createHighBoundary(vehicles) {\r\n    var highBoundary = 0\r\n    for (var vehicle of vehicles) {\r\n      var parsed = parseInt(vehicle.injected.price)\r\n      if (parsed > highBoundary) {\r\n        highBoundary = parsed\r\n      }\r\n    }\r\n    var final = await weiToMyCurrency(highBoundary) + 10\r\n    setHighBound(roundToNDigits(2, final))\r\n  }\r\n\r\n\r\n/**\r\n  * On changes to the allVehicles object in the redux store \r\n  * Get all of the vehicle attributes again and calculate the search options.\r\n  */\r\n  useEffect(() => {\r\n    var saleVehicles = getSaleVehicles(data.allVehicles)\r\n    setPool(Object.values(saleVehicles))\r\n    var allAttributes = getAttributesCollection(Object.values(saleVehicles))\r\n    assembleSearcher(allAttributes)\r\n\r\n  }, [data.allVehicles])\r\n\r\n\r\n  /**\r\n  * On change to the display currency or vehicles object recreate the low\r\n  * and high boundaries\r\n  */\r\n  useEffect(() => {\r\n\r\n    var saleVehicles = getSaleVehicles(data.allVehicles)\r\n    createLowBoundary(Object.values(saleVehicles))\r\n    createHighBoundary(Object.values(saleVehicles))\r\n\r\n  }, [data.displayCurrency, data.allVehicles])\r\n\r\n\r\n  /**\r\n  * Apply filtering to the vehicles for sale array when any of the\r\n  * listeners are changed\r\n  */\r\n  useEffect(() => {\r\n    setPages(applyFilters(pool))\r\n  }, [pool, filterObject, minPrice, maxPrice, perPage])\r\n\r\n\r\n\r\n  /**\r\n  * Applies the filters to the vehicle list in a specific order\r\n  * @param list the list of vehicles we wish to apply the filters to\r\n  */\r\n  function applyFilters(list) {\r\n    setPageNr(0)\r\n    var listOfVehicles = newCopy(list)\r\n    listOfVehicles = specialSort(listOfVehicles)\r\n    listOfVehicles = filterByFilterObject(filterObject, listOfVehicles, blockchain.account)\r\n    listOfVehicles = filterPriceRange(listOfVehicles, minPrice, maxPrice)\r\n    listOfVehicles = listToNSublists(listOfVehicles, perPage)\r\n    return listOfVehicles\r\n  }\r\n\r\n\r\n  /**\r\n  * Creates the filtering object used in filtering \r\n  * @param list\r\n  */\r\n  function loadFilterObject(list) {\r\n    var mf = {}\r\n    for (var object of list) {\r\n      mf[object.group] = {}\r\n      mf[object.group] = object.value\r\n    }\r\n    setFilterObject(mf)\r\n  }\r\n\r\n  const [value1, setValue1] = React.useState([lowBound, highBound]);\r\n  const marks = [\r\n    {\r\n      value: lowBound,\r\n      label: `${lowBound} ${data.displayCurrency}`,\r\n    },\r\n    {\r\n      value: highBound,\r\n      label: `${highBound} ${data.displayCurrency}`,\r\n    },\r\n  ];\r\n\r\n  /**\r\n  * Handles the change in the position of the range sliders thumbs\r\n  */\r\n  const handleChange2 = (event, newValue, activeThumb) => {\r\n    var minDistance = highBound / 100\r\n\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (activeThumb === 0) {\r\n      setValue1([Math.min(newValue[0], value1[1] - minDistance), value1[1]]);\r\n    } else {\r\n      setValue1([value1[0], Math.max(newValue[1], value1[0] + minDistance)]);\r\n    }\r\n  };\r\n\r\n  /**\r\n  * Handles the change in the value of the range sliders\r\n  */\r\n  const handleChange1 = (event, newValue) => {\r\n    if (!Array.isArray(newValue)) {\r\n      return;\r\n    }\r\n    setMinPrice(newValue[0])\r\n    setMaxPrice(newValue[1])\r\n  };\r\n\r\n\r\n\r\n  function valueLabelFormat(value) {\r\n    return `${value} ${data.displayCurrency}`;\r\n  }\r\n\r\n\r\n  const formatGroupLabel = data => (\r\n    <Stack justifyContent=\"space-between\" display=\"flex\" flexDirection=\"row\"  >\r\n      <Box>\r\n        {data.label}\r\n      </Box>\r\n      <Box>\r\n        ({data.options.length})\r\n      </Box>\r\n    </Stack>\r\n  );\r\n\r\n  function onlyIfGroupNotSelected(selected) {\r\n    if (filterObject.hasOwnProperty(selected.group))\r\n      return true\r\n    else\r\n      return false\r\n  }\r\n\r\n\r\n  function handlePerPage(e) {\r\n    setPerPage(e.target.value)\r\n  }\r\n\r\n  function tooltip() {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography color=\"inherit\">The Market</Typography>\r\n        <Stack display=\"flex\" align-items=\"center\" justify-content=\"center\" flexDirection=\"column\">\r\n          <Box >\r\n            <GameIcons.GiHomeGarage></GameIcons.GiHomeGarage> {\"- Vehicle I have listed.\"}\r\n          </Box>\r\n          <Box>\r\n            <MDIcons.MdPriceCheck></MDIcons.MdPriceCheck> {\"- Vehicle for which I am top bidder.\"}\r\n          </Box>\r\n          <Box>\r\n            <RiIcons.RiAuctionFill></RiIcons.RiAuctionFill> {\"- Vehicle is listed as an auction.\"}\r\n          </Box>\r\n          <Box>\r\n            {\"Listings are instant by default. Only auctions have a designated icon.\"}\r\n          </Box>\r\n        </Stack>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Stack marginTop={2} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n\r\n\r\n\r\n      <Box width={{xs: \"80%\",sm: \"50%\",md:\"40%\", lg: \"30%\"}}>\r\n        <Select\r\n          isOptionDisabled={onlyIfGroupNotSelected}\r\n          formatGroupLabel={formatGroupLabel}\r\n          placeholder=\"Search, select or sort...\"\r\n          onChange={loadFilterObject}\r\n          isMulti={true}\r\n          options={newSelect} />\r\n      </Box>\r\n\r\n\r\n      <Stack width={{xs: \"75%\",sm: \"50%\",md:\"40%\", lg: \"30%\"}} display=\"flex\" align-items=\"center\" justify-content=\"center\" >\r\n        <Slider\r\n          min={lowBound}\r\n          max={highBound}\r\n          marks={marks}\r\n          value={value1}\r\n          step={highBound / 100}\r\n          onChange={handleChange2}\r\n          onChangeCommitted={handleChange1}\r\n          valueLabelDisplay=\"auto\"\r\n          valueLabelFormat={valueLabelFormat}\r\n        />\r\n      </Stack>\r\n\r\n      <Tooltip title={tooltip()}>\r\n        <IconButton>\r\n          <FeatherIcons.FiHelpCircle />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      {pages.length != 0 ?\r\n        <Grid container padding={5} spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 6, md: 12, xl: 18 }}>\r\n          {pages[pageNr].map((vehicle, key) => {\r\n            return (\r\n              <Grid item xs={4} sm={6} md={6} xl={6} key={key}>\r\n                <MiniCard key={key} vehicle={vehicle}></MiniCard>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        :\r\n        <Stack display=\"flex\" align-items=\"center\" justify-content=\"center\">\r\n          No vehicles available.\r\n        </Stack>}\r\n\r\n\r\n      <Stack display=\"flex\" align-items=\"center\" justify-content=\"center\" flexDirection=\"column\" >\r\n        <Pagination page={pageNr + 1} onChange={(a, b) => { setPageNr(b - 1) }} showFirstButton showLastButton count={pages.length} />\r\n      </Stack>\r\n\r\n      <Stack>\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 50 }}>\r\n          <InputLabel>Per page</InputLabel>\r\n          <Select2\r\n            size=\"x\"\r\n            value={perPage}\r\n            label=\"Per Page\"\r\n            onChange={handlePerPage}\r\n          >\r\n            <MenuItem value={6}>6</MenuItem>\r\n            <MenuItem value={18}>18</MenuItem>\r\n            <MenuItem value={60}>60</MenuItem>\r\n          </Select2>\r\n        </FormControl>\r\n      </Stack>\r\n\r\n    </Stack>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Marketplace;","import React, { useEffect, useState } from 'react';\r\nimport '../../styles/VerifyBox.css';\r\nimport { sleep } from '../utils/Other';\r\n\r\nimport { MdOutlinePersonSearch } from \"react-icons/md\";\r\n\r\n/**\r\n  * The search bar functionality component used in Verify.\r\n  * It modifies the pool inputted into this component and then\r\n  * sets it back to the caller with the modifier function callback\r\n  * The reset is used to reset the pool to its initial value. the reset is \r\n  * used as backup.\r\n  * @param pool the list we apply filtering on\r\n  * @param modifier the callback for the caller\r\n  * @param reset the backup\r\n  */\r\nconst SearchFilter = ({ pool: pool, modifier: modifier, reset: reset }) => {\r\n\r\n    const [wordEntered, setWordEntered] = useState(\"\");\r\n    const [iconFocused, setIconFocused] = useState(false);\r\n    const [inputFocused, setInputFocused] = useState(false);\r\n\r\n    const handleFilter = (word) => {\r\n\r\n        setWordEntered(word);\r\n\r\n        const newFilter = pool.filter((element) => {\r\n            for (var value of Object.values(element.attributes)) {\r\n                if (value.toLowerCase().includes(word.toLowerCase())) {\r\n                    return 1\r\n                }\r\n            }\r\n            return 0\r\n        });\r\n\r\n        if (word === \"\") {\r\n            modifier(reset);\r\n        } else {\r\n            modifier(newFilter);\r\n        }\r\n    };\r\n\r\n    const clearInput = () => {\r\n        modifier(reset);\r\n        setWordEntered(\"\");\r\n    };\r\n\r\n    useEffect(async () => {                             \r\n        if (inputFocused == false && window.location.pathname == \"/verify\") {\r\n            await sleep(100);\r\n            clearInput()\r\n        }\r\n    }, [inputFocused])\r\n\r\n    return (\r\n        <div className='search-wrapper'>\r\n            <div className=\"search-container\">\r\n                <button\r\n                    className=\"search-button\"\r\n                    onClick={() => { if (iconFocused) clearInput() }}\r\n                    onBlur={() => setIconFocused(false)}\r\n                    onFocus={() => setIconFocused(true)}\r\n                >\r\n                    {wordEntered ? (inputFocused || iconFocused ? \"✖️\" : <MdOutlinePersonSearch/>) : <MdOutlinePersonSearch/>}\r\n                </button>\r\n                <input\r\n                    className=\"search-input\"\r\n                    onChange={(e) => { handleFilter(e.target.value) }}\r\n                    onBlur={() => {\r\n                        setInputFocused(false)\r\n                    }}\r\n                    onFocus={() => setInputFocused(true)}\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a Vehicle...\"\r\n                    value={wordEntered}\r\n                >\r\n                </input>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchFilter;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport SearchFilter from '../filters/Search';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Paper, Stack } from '@mui/material';\r\n/**\r\n  * The Verify component which is displayed on the Verify page\r\n  * It allows for users (police/authority) to search for any vehicle that exists\r\n  */\r\nfunction Verify() {\r\n\r\n  const data = useSelector((state) => state.data);\r\n  let vehicleList = data.allVehicles\r\n\r\n  const [pool, setPool] = useState([])\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Stack  display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n      <SearchFilter pool={Object.values(vehicleList)} modifier={setPool} reset={[]} />\r\n      <Stack\r\n \r\n        spacing={3}\r\n        width={{xs:\"80%\",sm:\"40%\"}}\r\n      >\r\n        {pool.slice(0, 15).map((value, key) => {\r\n          return (\r\n            <Paper\r\n              key={key}\r\n              onClick={() => {\r\n                history.push({\r\n                  pathname: \"/vehicle\",\r\n                  state: { metadata: value }\r\n                })\r\n              }} >\r\n              <Stack padding={2}  direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <p >{value.injected.id} </p>\r\n                <p >{value.attributes.vhcid}</p>\r\n              </Stack>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Verify;","import React, { useState } from 'react';\r\nimport '../../styles/MintForm.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createMetaDataAndMint, formUpdate, nextStep, prevStep, updateMetadata } from \"../../redux/minting/formActions\";\r\nimport { IconButton, Stack, TextField, Typography } from '@mui/material';\r\nimport { IoMdArrowBack } from \"react-icons/io\";\r\n\r\n\r\n/**\r\n  * The form component. It allows the user to type in the values\r\n  * for minting/editing etc. It is linked to the redux value store with the\r\n  * same name for data storing.\r\n  */\r\nconst Form = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const form = useSelector((state) => state.form);\r\n  const [forceUpdate, setForceUpdate] = useState(0)\r\n\r\n  /**\r\n  * Checks if any of the fields have been left uninputted.\r\n  * If so set the redux value of the errors for those fields to \r\n  * required.\r\n  */\r\n  function validate() {\r\n    var currentFields = getCurrentFields()\r\n    var pass = true\r\n    resetErrors()\r\n    if (form.step == form.nrOfSteps) {\r\n      if (Object.keys(form.edit).length == 0)\r\n        if (form.buffer.length == 0) {\r\n          form.errors.image = 'Image required';\r\n          pass = false\r\n        }\r\n    }\r\n    else {\r\n      for (var i = 0; i < currentFields.length; i++)\r\n        if (form.fields[currentFields[i]] == \"\") {\r\n          form.errors[currentFields[i]] = \"Field Required.\"\r\n          pass = false\r\n        }\r\n    }\r\n    setForceUpdate(Math.floor(Math.random() * 1000))\r\n    if (pass)\r\n      return 1\r\n    return 0\r\n  }\r\n\r\n  function resetErrors() {\r\n    var errors = Object.keys(form.errors)\r\n    for (var i = 0; i < errors.length; i++)\r\n      form.errors[errors[i]] = \"\"\r\n    form.errors.image = []\r\n  }\r\n\r\n  function getCurrentFields() {\r\n    return Object.keys(form.fields).slice((form.step - 1) * 4, ((form.step - 1) * 4) + 4)\r\n  }\r\n\r\n  function getPlaceholder(field) {\r\n    var returntext = \"eg. \"\r\n    switch (field) {\r\n      case \"company\":\r\n        return returntext + \"Tesla\";\r\n      case \"model\":\r\n        return returntext + \"Model X\";\r\n      case \"vhcid\":\r\n        return returntext + \"TSLA298173827D81\"\r\n      case \"year\":\r\n        return returntext + \"2020\"\r\n      case \"color\":\r\n        return returntext + \"Black\"\r\n      case \"body\":\r\n        return returntext + \"Hatchback\"\r\n      case \"transmission\":\r\n        return returntext + \"Automatic\"\r\n      case \"fuel\":\r\n        return returntext + \"Electric\"\r\n      case \"engine\":\r\n        return returntext + \"AWD 60\"\r\n      case \"doors\":\r\n        return returntext + \"7\"\r\n      case \"seats\":\r\n        return returntext + \"5\"\r\n      case \"driver_side\":\r\n        return returntext + \"Left\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n\r\n        color: \"white\",\r\n        background: \"linear-gradient(90deg, rgb(40, 40, 40) 0%, rgb(17, 17, 17) 100%)\",\r\n      }}\r\n\r\n      borderRadius={{xs: \"0 0 10px 10px\", sm: \"0 0 10px 10px\", md: \"0 0 10px 10px\", lg: \"0 10px 10px 0px\"}}  \r\n      padding={6}\r\n      width={{ xs: \"100%\", sm: \"100%\", md: \"100%\", lg: \"50%\" }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack>\r\n          {form.step != 1 ?\r\n            <IconButton sx={{ color: \"white\" }} onClick={() => dispatch(prevStep())} >\r\n              <IoMdArrowBack />\r\n            </IconButton> : null}\r\n        </Stack>\r\n        <Stack alignItems=\"end\">\r\n          <span >{form.step}/{form.nrOfSteps}</span>\r\n        </Stack>\r\n      </Stack>\r\n\r\n\r\n      <Stack padding={1} spacing={4} alignItems=\"center\" justifyContent=\"center\">\r\n        <Typography>\r\n          Step {form.step}:\r\n        </Typography>\r\n        {form.step == form.nrOfSteps ?\r\n          <Stack display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            {Object.keys(form.fields).map((key, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  {key}: {form.fields[key]}\r\n                </div>\r\n              );\r\n            })}\r\n            {form.errors.image && <p>{form.errors.image}</p>}\r\n          </Stack>\r\n          : getCurrentFields().map((field) => {\r\n            return (\r\n              <Stack width=\"90%\" key={field}>\r\n                <label>{field}</label>\r\n\r\n                <TextField\r\n                  placeholder={getPlaceholder(field)}\r\n                  sx={{\r\n                    backgroundColor: \"white\",\r\n\r\n                    '& .MuiOutlinedInput-input': {\r\n                      padding: 1,\r\n                      color: \"black\",\r\n                      backgroundColor: \"white\"\r\n                    },\r\n                    '& .MuiFormHelperText-root': {\r\n                      color: \"red\",\r\n                    },\r\n                  }}\r\n                  name={field}\r\n                  onChange={(e) =>\r\n                    dispatch(formUpdate({ name: e.target.name, value: e.target.value })\r\n                    )}\r\n                  value={form.fields[field]}\r\n                  disabled={Object.keys(form.edit).length != 0 && form.step == 1 ? true : false}\r\n                  error={form.errors[field] ? true : false}\r\n                />\r\n                <p style={{ color: \"red\" }} >{form.errors[field] ? form.errors[field] : null}</p>\r\n\r\n              </Stack>\r\n            );\r\n          })\r\n        }\r\n\r\n\r\n        <button style={{marginTop: \"60px\"}} className='form-input-btn' disabled={form.loading ? true : false} onClick={(e) => {\r\n          if (validate() == 1)\r\n            if (form.step == form.nrOfSteps)\r\n              if (Object.keys(form.edit).length == 0)\r\n                dispatch(createMetaDataAndMint())\r\n              else\r\n                dispatch(updateMetadata())\r\n            else\r\n              dispatch(nextStep())\r\n        }}>\r\n          {form.loading ? \"Loading\" : form.step == form.nrOfSteps ? \"Submit\" : \"Next\"}\r\n        </button>\r\n\r\n\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\nimport Form from '../form/Form';\nimport Dropzone from '../form/Dropzone';\nimport { Stack } from '@mui/material';\n\n/**\n  * Component for the Minting page.\n  */\nconst Mint = () => {\n\n    return (\n        <Stack\n            mt={5}\n            \n            display=\"flex\"\n            direction={{ xs: \"column\", sm: \"column\", md: \"column\", lg: \"row\" }}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            <Stack\n            borderRadius= \"10px\"\n                width={{ lg: \"80%\", xl: \"60%\" }}\n                sx={{\n                    background: \"linear-gradient(90deg,rgb(39, 176, 255) 0%,rgb(0, 232, 236) 50%)\"\n\n                }}\n                display=\"flex\"\n                direction={{ xs: \"column\", sm: \"column\", md: \"column\", lg: \"row\" }}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Dropzone></Dropzone>\n                <Form></Form>\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default Mint;\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { roles, actions, getAdminOptionsFor } from '../utils/Roles';\r\nimport { callChainFunction } from '../utils/GatewayParser';\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport Web3 from \"web3\";\r\nimport { Button, FormControl, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@mui/material';\r\n\r\n/**\r\n  * Component for the Admin page.\r\n  * Handles burning, granting/revoking roles and setting\r\n  * addresses for the odometers.\r\n  */\r\nconst Admin = () => {\r\n\r\n  const data = useSelector((state) => state.data);\r\n  const { register, handleSubmit } = useForm();\r\n  const myAdminOptions = getAdminOptionsFor(data.myRole)\r\n  const dispatch = useDispatch();\r\n\r\n  const [roleOption, setRoleOption] = useState(\"\")\r\n  const [roleSelected, setRoleSelected] = useState(\"\")\r\n  const [roleAddress, setRoleAddress] = useState(\"\")\r\n\r\n  const [vehicleToBurn, setVehicleToBurn] = useState(\"\")\r\n\r\n  const [oddAddr, setOddAddr] = useState(\"\")\r\n  const [vehicleToOdd, setVehicleToOdd] = useState(\"\")\r\n\r\n  const handleRole = () => {\r\n    if (roleOption && roleSelected && roleAddress) {\r\n      if (Web3.utils.isAddress(roleAddress)) {\r\n        dispatch(callChainFunction(roleOption, [roles[roleSelected], roleAddress]))\r\n      }\r\n      else {\r\n        dispatch(alerts({ alert: \"error\", message: \"Address format invalid.\" }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBurn = () => {\r\n    if (vehicleToBurn){\r\n      dispatch(callChainFunction(\"burn\", [vehicleToBurn]))\r\n    }\r\n    else{\r\n      dispatch(alerts({ alert: \"error\", message: \"Required fields not filled.\" }))\r\n    }\r\n  }\r\n\r\n  const handleSetOdometer = () => {\r\n    if (vehicleToOdd && oddAddr) {\r\n      if (Web3.utils.isAddress(oddAddr)) {\r\n        dispatch(callChainFunction(\"setOdometerAddress\", [vehicleToOdd, oddAddr]))\r\n      }\r\n      else {\r\n        dispatch(alerts({ alert: \"error\", message: \"Address format incorrect.\" }))\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack mt={5} spacing={9} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n      <Stack >\r\n        <Typography>Grant/Revoke Roles</Typography>\r\n        <TextField value={roleAddress} onChange={(e) => { setRoleAddress(e.target.value) }} label=\"Address\" variant=\"outlined\" />\r\n        <FormControl fullWidth>\r\n          <InputLabel>Role Option</InputLabel>\r\n          <Select\r\n            value={roleOption}\r\n            label=\"Role Option\"\r\n            onChange={(e) => { setRoleOption(e.target.value) }}\r\n          >\r\n            {myAdminOptions.roleManaging.actions.map((action) => {\r\n              return (\r\n                <MenuItem key={action} value={action}>{action}</MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          \r\n          <InputLabel>Role</InputLabel>\r\n          <Select\r\n            value={roleSelected}\r\n            label=\"Role\"\r\n            onChange={(e) => { setRoleSelected(e.target.value) }}\r\n          >\r\n            {Object.keys(myAdminOptions.roleManaging.roles).map((role) => {\r\n              return (\r\n                <MenuItem key={role} value={role}>{role}</MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        <Button onClick={handleRole} variant=\"contained\">Submit</Button>\r\n      </Stack>\r\n\r\n\r\n      {myAdminOptions.vehicleBurning ?\r\n        <Stack >\r\n                  <Typography>Burn Vehicles</Typography>\r\n\r\n          <TextField onChange={(e) => { setVehicleToBurn(e.target.value) }} value={vehicleToBurn} label=\"Vehicle ID\" variant=\"outlined\" />\r\n          <Button onClick={handleBurn} variant=\"contained\">Burn</Button>\r\n        </Stack>\r\n        : null}\r\n\r\n      {myAdminOptions.setOdometers ?\r\n        <Stack  >\r\n                  <Typography>Set Odometer for Vehicles</Typography>\r\n\r\n          <TextField onChange={(e) => { setVehicleToOdd(e.target.value) }} value={vehicleToOdd} label=\"Vehicle ID\" variant=\"outlined\" />\r\n          <TextField onChange={(e) => { setOddAddr(e.target.value) }} value={oddAddr} label=\"Odometer Address\" variant=\"outlined\" />\r\n          <Button onClick={handleSetOdometer} variant=\"contained\">Set</Button>\r\n        </Stack>\r\n        : null}\r\n\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Admin;","\r\nimport React, { useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkRoutePermissionFor } from '../utils/Roles';\r\n\r\n/**\r\n  * Authenticates user access to certain pages/components throughout the app \r\n  * based on their role in the ecosystem.\r\n  */\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const data = useSelector((state) => state.data);\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            checkRoutePermissionFor(rest.path, data.myRole) ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import { Stack, Typography } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../styles/Timeline.css';\r\nimport { callViewChainFunction, getContractFor, getNetworkExplorer } from '../utils/GatewayParser';\r\nimport { MdSpeed } from \"react-icons/md\";\r\n\r\n/**\r\n * Component used for listing the history of the vehicle aka its owners.\r\n * @param vehicle the vehicle in question\r\n */\r\nconst History = ({ vehicle }) => {\r\n\r\n    const data = useSelector((state) => state.data);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const [vehicleHistory, setVehicleHistory] = useState({});\r\n    const [odometerValue, setOdometerValue] = useState(0);\r\n\r\n    useEffect(async () => {\r\n\r\n        const getVehicleHistory = async (events) => {\r\n            var vehicleHistory = {}\r\n            for (var event of events) {\r\n                var timestamp = (await blockchain.web3.eth.getBlock(event.blockHash)).timestamp\r\n                vehicleHistory[timestamp] = {}\r\n                vehicleHistory[timestamp].from = event.returnValues.from\r\n                vehicleHistory[timestamp].to = event.returnValues.to\r\n                vehicleHistory[timestamp].transactionHash = event.transactionHash\r\n            }\r\n            setVehicleHistory(vehicleHistory)\r\n        }\r\n\r\n        (await getContractFor(\"events\", \"Transfer\")).getPastEvents(\r\n            'Transfer',\r\n            {\r\n                filter: { tokenId: vehicle.injected.id },\r\n                fromBlock: 0,\r\n                toBlock: 'latest'\r\n            },\r\n            (err, events) => {\r\n                getVehicleHistory(events)\r\n            }\r\n        )\r\n\r\n        setOdometerValue(await callViewChainFunction(\"getOdometerValue\", [vehicle.injected.id]))\r\n\r\n    }, [data.allVehicles])\r\n\r\n\r\n    function getDate(timestamp) {\r\n        var date = new Date(timestamp * 1000)\r\n        return date.toLocaleDateString()\r\n    }\r\n\r\n    /**\r\n * Function used to open a new tab for a transaction with the provided hash\r\n * @param txHash the hash of the transaction\r\n */\r\n    async function newTabTx(txHash) {\r\n\r\n        var win = window.open((await getNetworkExplorer(blockchain.currentNetwork)) + \"/tx/\" + txHash, '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    async function newTabAddress(txHash) {\r\n        var win = window.open((await getNetworkExplorer(blockchain.currentNetwork)) + \"/address/\" + txHash, '_blank');\r\n        win.focus();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Stack margin={3} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <p>Total distance traveled: </p>\r\n            <MdSpeed></MdSpeed>\r\n            <p>{odometerValue} km</p>\r\n\r\n            <div className=\"timeline\">\r\n                {Object.keys(vehicleHistory).map((time, index) => {\r\n                    return (\r\n\r\n                        <div key={index} className=\"timeline-event\">\r\n                            <label className=\"timeline-event-icon\"></label>\r\n                            <div className=\"timeline-event-info\">\r\n                                <p onClick={async () => { newTabTx(vehicleHistory[time]?.transactionHash) }} className=\"timeline-event-date\">{getDate(time)}</p>\r\n                                <h4 onClick={async () => { newTabAddress(vehicleHistory[time]?.to) }} >{(vehicleHistory[time]?.to).slice(0, 7) + \"...\" + (vehicleHistory[time]?.to).slice((vehicleHistory[time]?.to).length - 5, (vehicleHistory[time]?.to).length)}</h4>\r\n                                <h6>Proprietor</h6>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default History;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIfIsTopBidder, callChainFunction, callViewChainFunction } from \"../utils/GatewayParser\";\r\nimport { myCurrencyToWei, weiToMyCurrency } from '../utils/Exchange'\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as BsIcons from 'react-icons/bs';\r\n\r\nimport { getUserAccount } from '../../redux/reduxUtils';\r\nimport { formatAccountAddress } from '../utils/Other';\r\n\r\n/**\r\n * Component to display the view of the management tab for when the vehicle\r\n * you are seeing is not yours and listed.\r\n * @param vehicle the vehicle in question\r\n */\r\nfunction NotMyVehicleListed({ vehicle }) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const app = useSelector((state) => state.app);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n\r\n    const [desiredPrice, setDesiredPrice] = useState(0)\r\n    const [displayPrice, setDisplayPrice] = useState(9999)\r\n    const [topBidder, setTopBidder] = useState(\"0x0\")\r\n    const [isForSale, setIsForSale] = useState(false)\r\n    const [isAuction, setIsAuction] = useState(false)\r\n    const [isTopBidder, setIsTopBidder] = useState(false)\r\n    const [myBalance, setMyBalance] = useState(0)\r\n    const [canBuy, setCanBuy] = useState(false)\r\n\r\n    useEffect(async () => {\r\n\r\n        var isForSale = await callViewChainFunction(\"isForSale\", [vehicle.injected.id])\r\n        var isAuction = await callViewChainFunction(\"isAuction\", [vehicle.injected.id])\r\n        setIsAuction(isAuction)\r\n\r\n        if (isForSale) {\r\n            var vehiclePriceRaw = await callViewChainFunction(\"getVehiclePrice\", [vehicle.injected.id])\r\n            setDisplayPrice(await weiToMyCurrency(vehiclePriceRaw))\r\n            if (isAuction) {\r\n                setTopBidder(await callViewChainFunction(\"getTopBidder\", [vehicle.injected.id]))\r\n                setIsTopBidder(await getIfIsTopBidder(vehicle.injected.id))\r\n            }\r\n        }\r\n\r\n        if (blockchain.account) {\r\n            var myBalanceRaw = await blockchain.web3.eth.getBalance(blockchain.account)\r\n            setMyBalance(await weiToMyCurrency(myBalanceRaw))\r\n\r\n            if (parseInt(myBalanceRaw) > parseInt(vehiclePriceRaw)) {\r\n                setCanBuy(true)\r\n            }\r\n        }\r\n\r\n        setDesiredPrice(0)\r\n\r\n    }, [data])\r\n\r\n\r\n\r\n    async function buyOrBid() {\r\n        if (canBuy)\r\n            if (blockchain.account) {\r\n                if (isAuction) {\r\n                    if (desiredPrice > displayPrice)\r\n                        dispatch(callChainFunction(\"bid\", [vehicle.injected.id], { value: await myCurrencyToWei(desiredPrice) }))\r\n                    else\r\n                        dispatch(alerts({ alert: \"error\", message: \"Your price needs to be higher than the current top bid.\" }))\r\n                }\r\n                else {\r\n                    dispatch(callChainFunction(\"buy\", [vehicle.injected.id], { value: await callViewChainFunction(\"getVehiclePrice\", [vehicle.injected.id]) }))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(alerts({ alert: \"error\", message: \"You need to login.\" }))\r\n            }\r\n    }\r\n\r\n    function buttonOnOrOff () {\r\n        if (canBuy){\r\n            if (isAuction){\r\n                if (desiredPrice > displayPrice)\r\n                {\r\n                    return \"panel-button\"\r\n                }\r\n                else {\r\n                    return \"panel-button-disabled\"\r\n                }\r\n            }\r\n            else {\r\n                return \"panel-button\"\r\n            }\r\n        }\r\n        else {\r\n            return \"panel-button-disabled\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className=\"phone\">\r\n            <div className=\"content\">\r\n                <div className={blockchain.pendingTx.length != 0 ? \"circle-loading\" : \"circle\"}>\r\n                    <div className='circle-status'>\r\n                        {blockchain.pendingTx.length != 0 ? <BsIcons.BsThreeDots /> : <AiIcons.AiFillCar />}\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"panel-heading\">{isAuction ? \"Bid Vehicle\" : \"Purchase Vehicle\"}</p>\r\n\r\n                <p>\r\n                    My Balance: {myBalance} {data.displayCurrency}\r\n                </p>\r\n                <p>{isAuction ? topBidder != \"0x0000000000000000000000000000000000000000\" ? \"Top Bid: \" : \"Starting Price: \" : \"Price: \"} {displayPrice} {data.displayCurrency}</p>\r\n\r\n                <div>\r\n                    {isAuction && topBidder != \"0x0000000000000000000000000000000000000000\" ?\r\n                        isTopBidder ?\r\n                            <p>You are the top bidder.</p>\r\n                            :\r\n                            <p>Top Bidder: {formatAccountAddress(topBidder)}</p>\r\n\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n                {isAuction ?\r\n                    <div className='panel-input'>\r\n                        <p>My Bid:</p>\r\n                        <div>\r\n                            <input type=\"number\" value={desiredPrice} onChange={(e) => { setDesiredPrice(e.target.value) }}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label>{data.displayCurrency}</label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n            </div>\r\n            <div className=\"panel-bottom-1\">\r\n                <div\r\n                    className={buttonOnOrOff()}\r\n                    onClick={async () => {\r\n                        await buyOrBid()\r\n                    }} >\r\n                    <FaIcons.FaCheck />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default NotMyVehicleListed;","import React, { useState, useEffect } from 'react';\r\nimport { listForSale, listAuction, callChainFunction, callViewChainFunction, getContractFor } from \"../utils/GatewayParser\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport { myCurrencyToWei } from '../utils/Exchange';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as BsIcons from 'react-icons/bs';\r\n\r\n/**\r\n * Component to display the view of the management tab for when the vehicle\r\n * you are seeing is yours and not listed.\r\n * @param vehicle the vehicle in question\r\n */\r\nfunction MyVehicleNotListed({ vehicle }) {\r\n\r\n    const dispatch = useDispatch();\r\n \r\n    const app = useSelector((state) => state.app);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [desiredPrice, setDesiredPrice] = useState(0)\r\n    const [typeToggle, setTypeToggle] = useState(false)\r\n    const [approved, setApproved] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        if (await callViewChainFunction(\"getApproved\", [vehicle.injected.id]) == (await getContractFor(\"methods\", \"buy\"))._address) {\r\n            setApproved(true)\r\n        }\r\n    }, [data.approval])\r\n\r\n\r\n    async function listVehicle() {\r\n        if (desiredPrice > 0) {\r\n            var convertedPrice = await myCurrencyToWei(desiredPrice)\r\n            var marketContractAddress = (await getContractFor(\"methods\", \"buy\"))._address\r\n\r\n            if (await callViewChainFunction(\"getApproved\", [vehicle.injected.id]) != marketContractAddress) {\r\n                await dispatch(callChainFunction(\"approve\", [marketContractAddress, vehicle.injected.id]))\r\n            }\r\n\r\n            if (!typeToggle) {\r\n                dispatch(callChainFunction(\"listInstant\", [vehicle.injected.id, convertedPrice]))\r\n            }\r\n            else {\r\n                dispatch(callChainFunction(\"listAuction\", [vehicle.injected.id, convertedPrice]))\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"phone\">\r\n            <div className=\"content\">\r\n                <div className={blockchain.pendingTx.length != 0 ? \"circle-loading\" : \"circle\"}>\r\n                    <div className='circle-status'>\r\n                        {blockchain.pendingTx.length != 0 ? <BsIcons.BsThreeDots /> : typeToggle ? <RiIcons.RiAuctionFill /> : <IoIcons.IoIosCash />}\r\n                    </div>\r\n                </div>\r\n                <p className=\"panel-heading\">List your vehicle</p>\r\n                <p>Simply select the type of listing and set a price.</p>\r\n                <div className=\"boss\" onClick={() => setTypeToggle(!typeToggle)}>\r\n                    <div className={typeToggle ? \"toggle-right\" : \"toggle-left\"}></div>\r\n                    <div className=\"options\">\r\n                        <p className={typeToggle ? \"optionOff\" : \"optionOn\"}>Instant</p>\r\n                        <p className={typeToggle ? \"optionOn\" : \"optionOff\"}>Auction</p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>{!typeToggle ? \"Price: \" : \"Starting Price: \"}</label>\r\n                    <div>\r\n                        <input type=\"number\" value={desiredPrice} onChange={(e) => { setDesiredPrice(e.target.value) }}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>{data.displayCurrency}</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='mark-both'>\r\n                    <div className={approved? 'mark-on' : 'mark-off' }>\r\n                        1. Approve\r\n                    </div>\r\n                    <div className=\"mark\"></div>\r\n                    <div className='mark-off'>\r\n                        2. ListVHC\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"panel-bottom-1\">\r\n                <div\r\n                    className={desiredPrice > 0 ? \"panel-button\" : \"panel-button-disabled\"}\r\n                    onClick={async () => {\r\n                        await listVehicle()\r\n                    }}>\r\n                    <FaIcons.FaCheck />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default MyVehicleNotListed;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myCurrencyToWei, weiToMyCurrency } from '../utils/Exchange'\r\nimport { getVehiclePrice, getTopBidder, callChainFunction, callViewChainFunction } from \"../utils/GatewayParser\";\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as BsIcons from 'react-icons/bs';\r\n\r\n/**\r\n * Component used for the view of the vehicle management tab when the vehicle\r\n * you are seeing is yours and also listed.\r\n * @param vehicle the vehicle in question\r\n */\r\nfunction MyVehicleListed({ vehicle }) {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.data);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n\r\n    const [desiredPrice, setDesiredPrice] = useState(0)\r\n    const [displayPrice, setDisplayPrice] = useState(0);\r\n    const [topBidder, setTopBidder] = useState(\"0x0000000000000000000000000000000000000000\")\r\n    const [isAuction, setIsAuction] = useState(false)\r\n\r\n    useEffect(async () => {\r\n\r\n        var isForSale = await callViewChainFunction(\"isForSale\", [vehicle.injected.id])\r\n        var isAuction = await callViewChainFunction(\"isAuction\", [vehicle.injected.id])\r\n        setIsAuction(isForSale)\r\n        setIsAuction(isAuction)\r\n\r\n        if (isForSale) {\r\n            setDisplayPrice(await weiToMyCurrency(await callViewChainFunction(\"getVehiclePrice\", [vehicle.injected.id])))\r\n            if (isAuction) {\r\n                setTopBidder(await callViewChainFunction(\"getTopBidder\", [vehicle.injected.id]))\r\n            }\r\n        }\r\n\r\n        setDesiredPrice(0)\r\n    }, [data])\r\n\r\n    function delist() {\r\n        if (isAuction)\r\n            dispatch(callChainFunction(\"delistAuction\", [vehicle.injected.id]))\r\n        else\r\n            dispatch(callChainFunction(\"delistInstant\", [vehicle.injected.id]))\r\n    }\r\n\r\n\r\n    function formatAccountAddress(address) {\r\n        if (address) {\r\n            var length = address.length\r\n            return address.slice(0, 6) + \"...\" + address.slice(length - 4, length)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"phone\">\r\n            <div className=\"content\">\r\n\r\n                <div className={blockchain.pendingTx.length != 0 ? \"circle-loading\" : \"circle\"}>\r\n                    <div className='circle-status'>\r\n                        {blockchain.pendingTx.length != 0 ? <BsIcons.BsThreeDots /> : <FaIcons.FaCheck />}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <p className=\"panel-heading\">Vehicle Listed</p>\r\n                </div>\r\n\r\n                <div >\r\n                    <p>Type: {isAuction ? \"Auction\" : \"Instant\"}</p>\r\n                    <p>\r\n                        {isAuction ? topBidder != \"0x0000000000000000000000000000000000000000\" ? \"Highest Bid: \" : \"Starting Price: \" : \"Price: \"}\r\n                        {displayPrice} {data.displayCurrency}</p>\r\n                    {topBidder != \"0x0000000000000000000000000000000000000000\" ? <p>Top Bidder: {formatAccountAddress(topBidder)}</p> : null}\r\n                </div>\r\n\r\n\r\n                {!isAuction\r\n                    ?\r\n                    <div className='panel-input'>\r\n                        <p>Update Price:</p>\r\n                        <div>\r\n                            <input type=\"number\" value={desiredPrice} onChange={(e) => { setDesiredPrice(e.target.value) }}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label>{data.displayCurrency}</label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n            </div>\r\n            <div className=\"panel-bottom-2\">\r\n                <p onClick={() => {\r\n                    delist()\r\n                }}>Delist</p>\r\n                {isAuction\r\n                    ?\r\n                    topBidder != \"0x0000000000000000000000000000000000000000\"\r\n                        ?\r\n                        <div\r\n                            className=\"panel-button\"\r\n                            onClick={() => {\r\n                                dispatch(callChainFunction(\"concludeAuction\", [vehicle.injected.id]))\r\n                            }} >\r\n                              <RiIcons.RiAuctionFill />\r\n                        </div>\r\n                        :\r\n                        null\r\n                    :\r\n                    desiredPrice > 0\r\n                        ? <div\r\n                            className={desiredPrice > 0 ? \"panel-button\" : \"panel-button-disabled\"}\r\n                            onClick={async () => {\r\n                                dispatch(callChainFunction(\"setVehiclePrice\", [vehicle.injected.id, await myCurrencyToWei(desiredPrice)]))\r\n                            }}>\r\n                            <FaIcons.FaCheck />\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default MyVehicleListed;","import { Box, Card, Paper, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport '../../styles/Vehicle.css';\r\n\r\nconst BigCard = ({ vehicle }) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Card sx={{ padding: 0, margin: 4, borderRadius: 10, backgroundColor: \"rgba(0, 0, 0, 0.02) \"}}>\r\n\r\n                <Stack display=\"flex\" alignItems={{ xs: \"center\", sm: \"center\", md: \"stretch\" }} borderRadius={18} margin={0} padding={0} direction={{ xs: \"column\", sm: \"column\", md: \"row\" }}>\r\n\r\n\r\n                    <Box width={{ xs: \"100%\", sm: \"100%\", md: \"50%\" }} margin={1} padding={2}>\r\n                        <img\r\n                            className=\"card__image\"\r\n                            src={vehicle.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <Stack width={{ xs: \"100%\", sm: \"100%\", md: \"50%\" }}\r\n                        margin={1}\r\n                        padding={2}\r\n                        justifyContent={{ md: \"space-between\" }}\r\n                        direction={{ xs: \"column\", sm: \"column\", md: \"row\" }}>\r\n                        <Stack display=\"flex\" alignItems={{ xs: \"center\", sm: \"center\", md: \"left\" }} justifyContent=\"center\">\r\n                            <div className=\"card__date\">{vehicle.injected.id} - {vehicle.attributes.vhcid}</div>\r\n                            <span className=\"card__title\">{vehicle.attributes.company}</span>\r\n                            <div className=\"card__date\">Make</div>\r\n                            <span className=\"card__title\">{vehicle.attributes.model}</span>\r\n                            <div className=\"card__date\">Model</div>\r\n                            <span className=\"card__title\">{vehicle.attributes.year}</span>\r\n                            <div className=\"card__date\">Year</div>\r\n                        </Stack >\r\n\r\n                        <Stack display=\"flex\" alignItems={{ xs: \"center\", sm: \"center\", md: \"end\" }} justifyContent=\"center\">\r\n                            <span className=\"card__title2\">{vehicle.attributes.color}</span>\r\n                            <div className=\"card__date2\">Color</div>\r\n                            <span className=\"card__title2\">{vehicle.attributes.body}</span>\r\n                            <div className=\"card__date2\">Body</div>\r\n                            <span className=\"card__title2\">{vehicle.attributes.transmission}</span>\r\n                            <div className=\"card__date2\">Transmission</div>\r\n                            <span className=\"card__title2\">{vehicle.attributes.fuel}</span>\r\n                            <div className=\"card__date2\">Fuel</div>\r\n                            <span className=\"card__title2\">{vehicle.attributes.engine}</span>\r\n                            <div className=\"card__date2\">Engine</div>\r\n                            <span className=\"card__title2\">{vehicle.attributes.driver_side}</span>\r\n                            <div className=\"card__date2\">Driver Side</div>\r\n                            <Stack spacing={{ xs: 0, sm: 0, md: 1 }} display=\"flex\" alignItems={{ xs: \"center\", sm: \"center\", md: \"end\" }} justifyContent=\"center\" direction={{ xs: \"column\", sm: \"column\", md: \"row\" }}>\r\n                                <Stack display=\"flex\" alignItems=\"inherit\" justifyContent=\"center\">\r\n                                    <span className=\"card__title2\">{vehicle.attributes.doors}</span>\r\n                                    <div className=\"card__date2\">Doors</div>\r\n                                </Stack>\r\n                                <Stack display=\"flex\" alignItems=\"inherit\" justifyContent=\"center\">\r\n                                    <span className=\"card__title2\">{vehicle.attributes.seats}</span>\r\n                                    <div className=\"card__date2\">Seats</div>\r\n                                </Stack>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Stack>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BigCard;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIfIsTopBidder, callChainFunction, callViewChainFunction } from \"../utils/GatewayParser\";\r\nimport { myCurrencyToWei, weiToMyCurrency } from '../utils/Exchange'\r\nimport { alerts } from '../../redux/app/appActions';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as BsIcons from 'react-icons/bs';\r\n\r\nimport { getUserAccount } from '../../redux/reduxUtils';\r\n\r\nimport { GiMechanicGarage } from \"react-icons/gi\";\r\nimport Web3 from 'web3';\r\nimport { formatAccountAddress } from '../utils/Other';\r\n\r\n\r\n/**\r\n * Component used for approving addresses as garages for the vehicle passed as prop\r\n * @param vehicle the vehicle for which we wish to approve\r\n */\r\nfunction Approve({ vehicle }) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const app = useSelector((state) => state.app);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n\r\n    const [garageAddress, setGarageAddress] = useState(\"\")\r\n    const [alreadyApproved, setAlreadyApproved] = useState(\"\")\r\n\r\n    useEffect(async () => {\r\n        var checkIfHasAnyApproved = await callViewChainFunction(\"getApprovedGarage\", [vehicle.injected.id])\r\n        if (checkIfHasAnyApproved != 0x0000000000000000000000000000000000000000) {\r\n            setAlreadyApproved(checkIfHasAnyApproved)\r\n        }\r\n    }, [])\r\n\r\n    async function approve() {\r\n        if (garageAddress) {\r\n            if (Web3.utils.isAddress(garageAddress)) {\r\n                dispatch(await callChainFunction(\"setApprovedGarage\", [vehicle.injected.id, garageAddress]))\r\n\r\n            }\r\n            else {\r\n                dispatch(alerts({ alert: \"error\", message: \"Address is invalid.\" }))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function buttonOnOrOff() {\r\n        if (garageAddress) {\r\n            return \"panel-button\"\r\n        }\r\n        else {\r\n            return \"panel-button-disabled\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className=\"phone\">\r\n            <div className=\"content\">\r\n\r\n                <div className={blockchain.pendingTx.length != 0 ? \"circle-loading\" : \"circle\"}>\r\n                    <div className='circle-status'>\r\n                        {blockchain.pendingTx.length != 0 ? <BsIcons.BsThreeDots /> : <GiMechanicGarage />}\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"panel-heading\">Approve Vehicle</p>\r\n\r\n                <p>\r\n                    Approve your vehicle for a garage to modify it's data.\r\n                </p>\r\n                {alreadyApproved ? <p>\r\n                    Approved garage: {formatAccountAddress(alreadyApproved)}\r\n                </p> : null}\r\n\r\n                <div className='panel-input'>\r\n                    <p>Set garage address:</p>\r\n                    <div>\r\n                        <input placeholder='eg. 0xc1375A3812518208373474cCaB030CBb9cD9A499' type=\"text\" value={garageAddress} onChange={(e) => { setGarageAddress(e.target.value) }}></input>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"panel-bottom-1\">\r\n                <div\r\n                    className={buttonOnOrOff()}\r\n                    onClick={approve} >\r\n                    <FaIcons.FaCheck />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Approve;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getIfIsOwner, callViewChainFunction } from \"../utils/GatewayParser\";\r\nimport History from \"../vehicle_sections/History\";\r\nimport NotMyVehicleListed from \"../vehicle_sections/NotMyVehicleListed\";\r\nimport MyVehicleNotListed from \"../vehicle_sections/MyVehicleNotListed\";\r\nimport MyVehicleListed from \"../vehicle_sections/MyVehicleListed\";\r\n\r\nimport '../../styles/Vehicle.css';\r\nimport BigCard from \"../vehicle_sections/BigCard\";\r\nimport { Card, CardActions, CardContent, Paper, Stack, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Approve from \"../vehicle_sections/Approve\";\r\n\r\n/**\r\n  * The main page for any vehicle when trying to inspect it.\r\n  * It displays the vehicles information together with a panel\r\n  * which allows owners to list/delist and non owners to buy/purchase/view\r\n  */\r\n\r\nconst Vehicle = () => {\r\n\r\n    const location = useLocation()\r\n    const vehicle = location.state?.metadata\r\n\r\n    const data = useSelector((state) => state.data);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n\r\n    const [eexists, setEexists] = useState(false)\r\n    const [isForSale, setIsForSale] = useState({})\r\n    const [isOwner, setIsOwner] = useState({})\r\n\r\n    const [pageToggle, setPageToggle] = useState(false)\r\n\r\n\r\n    useEffect(async () => {\r\n\r\n        if (blockchain.smartContracts.length != 0) {\r\n\r\n            let eexists = await callViewChainFunction(\"exists\", [vehicle.injected.id])\r\n            setEexists(eexists)\r\n\r\n            if (eexists) {\r\n                const [isForSale, isOwner] = await Promise.all([callViewChainFunction(\"isForSale\", [vehicle.injected.id]), getIfIsOwner(vehicle.injected.id)])\r\n                setIsForSale(isForSale)\r\n                setIsOwner(isOwner)\r\n            }\r\n        }\r\n\r\n\r\n    }, [blockchain.smartContracts, data])\r\n\r\n    const [tab, setTab] = React.useState('History');\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        setTab(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {eexists ?\r\n                <Stack display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n\r\n                    <BigCard vehicle={vehicle} />\r\n\r\n                    <ToggleButtonGroup\r\n                        sx={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            width: 300,\r\n                            '& .MuiButtonBase-root': {\r\n                                borderRadius: '200px',\r\n                            },\r\n                        }}\r\n                        value={tab}\r\n                        exclusive\r\n                        onChange={handleChange}\r\n                    >\r\n                        <ToggleButton value=\"History\">History</ToggleButton>\r\n                        <ToggleButton value=\"Listing\">Listing</ToggleButton>\r\n                        {isOwner? <ToggleButton value=\"Approve\">Garage</ToggleButton> : null}\r\n                    </ToggleButtonGroup>\r\n\r\n\r\n                    {tab == \"History\" ?\r\n                        <History vehicle={vehicle}></History>\r\n                        :\r\n                        tab == \"Listing\" ?\r\n                            isOwner\r\n                                ?\r\n                                isForSale\r\n                                    ?\r\n                                    <MyVehicleListed vehicle={vehicle} />\r\n                                    :\r\n                                    <MyVehicleNotListed vehicle={vehicle} />\r\n                                : isForSale\r\n                                    ?\r\n                                    <NotMyVehicleListed vehicle={vehicle} />\r\n                                    :\r\n                                    <p>Vehicle not for sale.</p>\r\n                            :\r\n                            <Approve vehicle={vehicle}>\r\n\r\n                            </Approve>\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                </Stack>\r\n\r\n                : <div>\r\n                    <p>Sorry, this vehicle no longer exists.</p>\r\n                    <button onClick={() => {\r\n                        window.location.reload();\r\n                        window.location.replace(\"/\")\r\n                    }}>Back To Home</button>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Vehicle;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { alerts } from \"../../redux/app/appActions\";\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n/**\r\n  * The modal for errors displayed through the app\r\n  */\r\nfunction Error() {\r\n\r\n  const dispatch = useDispatch();\r\n  const app = useSelector((state) => state.app);\r\n\r\n\r\n  const dismiss = () => {\r\n    dispatch(alerts({ alert: \"error\" }))\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dismiss();\r\n  };\r\n\r\n  return (\r\n    app.alerts.error.length != 0 ?\r\n      <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n          {app.alerts.error.length}. Error! {app.alerts.error.at(-1)}\r\n        </Alert>\r\n      </Snackbar> : null\r\n  );\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction Loading() {\r\n\r\n  const app = useSelector((state) => state.app);\r\n\r\n  /**\r\n  * The loading modal which happens when the store value of loading is not empty.\r\n  */\r\n  return (\r\n    app.alerts.loading.length != 0 ?\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={true}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop> : null\r\n  );\r\n}\r\n\r\nexport default Loading;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { alerts } from \"../../redux/app/appActions\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n/**\r\n  * The main modal/snackbar displayed at the bottom when any success happens\r\n  * It is handled in a last in first out system (check blockchain reducer) in order\r\n  * to store order of the modals.\r\n  */\r\nfunction CustomModal() {\r\n\r\n  const dispatch = useDispatch();\r\n  const app = useSelector((state) => state.app);\r\n\r\n\r\n  const dismiss = () => {\r\n    dispatch(alerts({ alert: \"other\" }))\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dismiss();\r\n  };\r\n\r\n  return (\r\n    app.alerts.other.length != 0 ?\r\n      <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n          {app.alerts.other.at(-1).message} \r\n          {app.alerts.other.at(-1).url ? <a href={app.alerts.other.at(-1).url} target=\"_blank\">View 🔗</a> : null}\r\n        </Alert>\r\n      </Snackbar> : null\r\n  );\r\n}\r\n\r\nexport default CustomModal;","import { FormControl, Grid, InputLabel, MenuItem, Stack, TextField } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserAccount } from '../../redux/reduxUtils';\r\nimport { callChainFunction, callViewChainFunction } from '../utils/GatewayParser';\r\nimport { roles } from '../utils/Roles';\r\nimport MiniCard from '../vehicle_sections/MiniCard';\r\nimport { default as Select2 } from \"@mui/material/Select\";\r\nimport { alerts } from '../../redux/app/appActions';\r\n\r\n/**\r\n  * The garage component garages uses to see the vehicles that approved them as a garage.\r\n  */\r\nconst Garage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [address, setAddress] = useState(\"\")\r\n    const [vehicle, setVehicle] = useState(\"\")\r\n\r\n    function handleSelect (e) {\r\n        setVehicle(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {data.myRole == roles.GARAGE_ROLE ?\r\n                <Grid container padding={5} spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                    {Object.values(data.allVehicles).map((vehicle, index) => {\r\n                        if (vehicle.injected.garage == blockchain.account)\r\n                            return (\r\n                                <Grid item xs={2} sm={4} md={4} key={index}>\r\n                                    <MiniCard key={index} vehicle={vehicle}></MiniCard>\r\n                                </Grid>\r\n                            );\r\n                    })}\r\n                </Grid>\r\n            :null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Garage;","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport { formUpdate, updateEntry, uploadImage } from \"../../redux/minting/formActions\";\r\nimport Dropzone from '../form/Dropzone';\r\nimport Form from \"../form/Form\";\r\nimport Mint from \"./Mint\";\r\n\r\n/**\r\n  * Edit page for the Garage class to use to modify tokenURIS for approved\r\n  * vehicles.\r\n  */\r\nconst Edit = () => {\r\n\r\n    const location = useLocation()\r\n    let vehicle = location.state?.metadata\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n\r\n        Object.keys(vehicle.attributes).forEach((element) => {\r\n            dispatch(\r\n                formUpdate({ name: element, value: vehicle.attributes[element] })\r\n            );\r\n        })\r\n\r\n        dispatch(uploadImage({ preview: new URL(vehicle.image), buffer: [] }))\r\n\r\n        dispatch(\r\n            updateEntry({ name: \"edit\", value: vehicle })\r\n        );\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Mint/>\r\n    );\r\n}\r\n\r\nexport default Edit;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { getSidebarFor } from '../utils/Roles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport { IconButton, Stack } from '@mui/material';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n/**\r\n  * The main menu displayed at the top left.\r\n  * Turns into a hamburger menu when the dimensions of the user's\r\n  * view are too low.\r\n  */\r\nexport default function MainMenu() {\r\n\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.data);\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    var sidebar = getSidebarFor(data.myRole)\r\n    const [value, setValue] = React.useState(0)\r\n    const history = useHistory();\r\n\r\n    function handleChange(e) {\r\n        var index = [...e.target.parentElement.children].indexOf(e.target)\r\n        if (window.location.pathname != sidebar[index].path) {\r\n            history.push(sidebar[index].path)\r\n            setValue(index)\r\n        }\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n   \r\n        for (var element of sidebar) {\r\n            if (window.location.pathname == element.path) {\r\n                setValue(sidebar.indexOf(element))\r\n            }\r\n        }\r\n\r\n    }, [sidebar])\r\n\r\n\r\n    const drawer = (anchor) => (\r\n        <Box\r\n            sx={{ width: 250 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {sidebar.map((item, index) => (\r\n                    <ListItem button onClick={() => { history.push(item.path); }} key={index}>\r\n                        <ListItemIcon>\r\n                            {item.icon}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    const greaterThan700 = useMediaQuery({ minWidth: 700 })\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Stack direction=\"row\" >\r\n\r\n\r\n            <Drawer\r\n                anchor={'left'}\r\n                open={state['left']}\r\n                onClose={toggleDrawer('left', false)}\r\n            >\r\n                {drawer('left')}\r\n            </Drawer>\r\n\r\n\r\n            {greaterThan700 ? <Box sx={{ maxWidth: { sm: 320, md: 480, lg: 640, xl: 800 }, bgcolor: 'background.paper' }}>\r\n                <Tabs\r\n                    value={value}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {sidebar.map((item, index) => (\r\n                        <Tab onClick={handleChange} key={index} label={item.title} />\r\n                    ))}\r\n\r\n                </Tabs>\r\n            </Box> : <React.Fragment key={'left'}>\r\n                <IconButton onClick={toggleDrawer('left', true)}>\r\n                    <FaIcons.FaBars />\r\n                </IconButton>\r\n            </React.Fragment>}\r\n\r\n        </Stack>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport '../../styles/App.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, signout } from \"../../redux/blockchain/blockchainActions\";\r\nimport { getNetworkExplorer } from \"../utils/GatewayParser\";\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Typography from '@mui/material/Typography';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport Link from '@mui/material/Link';\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatAccountAddress } from \"../utils/Other\";\r\n\r\n/**\r\n  * Dialog which opens when the user is not connect. It allows the user\r\n  * to authenticate through a list of available web3 wallets.\r\n  */\r\nfunction NotConnectedDialog(props) {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const { onClose, open } = props;\r\n\r\n    useEffect(() => {\r\n        onClose()\r\n    }, [blockchain.account])\r\n\r\n    return (\r\n        <Dialog onClose={onClose} open={open}>\r\n            <DialogTitle>Connect a wallet</DialogTitle>\r\n            <List sx={{ pt: 0 }}>\r\n                <ListItem button onClick={() => { dispatch(login()) }} key={\"bruh\"}>\r\n                    <ListItemAvatar>\r\n                        <Avatar src=\"https://cdn.iconscout.com/icon/free/png-256/metamask-2728406-2261817.png\" >\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Metamask Wallet\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n/**\r\n  * Dialog which opens when the user is connected. It displays\r\n  * information about the user's account and the option to disconnect.\r\n  */\r\nfunction ConnectedDialog(props) {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const { onClose, open } = props;\r\n    const [explorerUrl, setExplorerUrl] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    function disconnect() {\r\n        history.push(\"/\")\r\n        onClose()\r\n        dispatch(signout())\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (blockchain.currentNetwork)\r\n            setExplorerUrl((await getNetworkExplorer(blockchain.currentNetwork)) + \"address/\" + blockchain.account)\r\n    }, [blockchain.currentNetwork, blockchain.account])\r\n\r\n    return (\r\n        <Dialog onClose={onClose} open={open}>\r\n            <DialogTitle>Account</DialogTitle>\r\n\r\n            <Stack spacing={1} padding={5} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\" >\r\n\r\n\r\n                <Avatar src=\"https://cdn.iconscout.com/icon/free/png-256/metamask-2728406-2261817.png\" >\r\n                </Avatar>\r\n\r\n                <ListItemText primary={formatAccountAddress(blockchain.account)} />\r\n                <Link\r\n                    variant=\"body2\"\r\n                    rel=\"noopener\"\r\n                    href={explorerUrl}\r\n                    target=\"_blank\"\r\n                >\r\n                    <FaIcons.FaExternalLinkAlt></FaIcons.FaExternalLinkAlt> View on Explorer\r\n                </Link>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Stack>\r\n            <Button size=\"small\" variant=\"contained\" onClick={disconnect}>Disconnect</Button>\r\n\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n/**\r\n  * Component chip seen at the top of the page which displays the current status of users.\r\n  * Authenticated/Unauthenticated\r\n  */\r\nfunction AccountStatus() {\r\n\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n\r\n    function openDialog() {\r\n        if (blockchain.account) {\r\n            setOpen2(true)\r\n        }\r\n        else {\r\n            setOpen1(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Chip\r\n                avatar={blockchain.account ?\r\n                    <Avatar>\r\n                        <Jazzicon seed={jsNumberForAddress(blockchain.account)} />\r\n                    </Avatar> : null}\r\n                label={blockchain.account ? formatAccountAddress(blockchain.account) : \"Connect Wallet\"}\r\n                variant=\"outlined\"\r\n                onClick={openDialog}\r\n            />\r\n\r\n            <NotConnectedDialog\r\n                open={open1}\r\n                onClose={() => setOpen1(false)}\r\n            />\r\n\r\n            <ConnectedDialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountStatus;","import React, { useEffect, useState } from \"react\";\r\nimport '../../styles/App.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Alert, Snackbar } from \"@mui/material\";\r\n\r\n/**\r\n  * The handling of the pending TX modals.\r\n  */\r\nfunction PendingTX() {\r\n\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n\r\n    return (\r\n\r\n        blockchain.pendingTx.length != 0 ? \r\n        <Snackbar open={true} >\r\n            <Alert severity=\"info\" sx={{ width: '100%' }}>\r\n                {blockchain.pendingTx.length} transaction(s) pending...\r\n            </Alert>\r\n        </Snackbar> : null\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default PendingTX;","import React from \"react\";\r\nimport '../../styles/App.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrSwitchNetwork, updateAppNetwork } from \"../../redux/blockchain/blockchainActions\";\r\n\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Typography from '@mui/material/Typography';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport Link from '@mui/material/Link';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\n\r\n/**\r\n  * The dialog which allows the user to click to select the network\r\n  * they wish to change to.\r\n  */\r\nfunction SimpleDialog(props) {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n\r\n    const changeNetwork = async (newNetwork) => {\r\n        if (blockchain.walletProvider)\r\n            await addOrSwitchNetwork(newNetwork)\r\n        else\r\n            dispatch(updateAppNetwork(newNetwork))\r\n    }\r\n\r\n    const { onClose, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Choose a network</DialogTitle>\r\n            <List sx={{ pt: 0 }}>\r\n                {blockchain.networkTables ? Object.keys(blockchain.networkTables?.networks).map((kkey) => (\r\n                    <ListItem button onClick={() => handleListItemClick(kkey)} key={kkey}>\r\n                        <ListItemAvatar>\r\n                            <Avatar sx={{ width: 30, height: 30 }}\r\n                                src={blockchain.networkTables.images[kkey]} >\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={blockchain.networkTables.networks[kkey].chainName} />\r\n                    </ListItem>\r\n                )) : null}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n/**\r\n  * The select network component at the top right allowing one to change\r\n  * the app's network from a pool of available networks that the app is deployed\r\n  * on.\r\n  */\r\nfunction SelectNetwork() {\r\n\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n\r\n\r\n    const changeNetwork = async (newNetwork) => {\r\n        if (blockchain.walletProvider)\r\n            await addOrSwitchNetwork(newNetwork)\r\n        else\r\n            dispatch(updateAppNetwork(newNetwork))\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        if (value) {\r\n            changeNetwork(value)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Chip\r\n                avatar={<Avatar src={blockchain.networkTables && blockchain.currentNetwork ? blockchain.networkTables.images[blockchain.currentNetwork] : null} />}\r\n                label={<Box display={{xs: \"none\", sm: \"none\" , md: \"block\"}} >{blockchain.networkTables && blockchain.currentNetwork ? blockchain.networkTables.networks[blockchain.currentNetwork].chainName : \"null\"}</Box>   }\r\n                variant=\"outlined\"\r\n                onClick={handleClickOpen}\r\n            />\r\n\r\n            <SimpleDialog\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectNetwork;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { refreshDisplayPrices, updatePrefferedCurrency } from '../../redux/data/dataActions';\r\nimport { fetchAllCurrencies } from '../utils/Exchange';\r\n\r\n/**\r\n  * Options component allows for the user to change the display currency\r\n  * across the app.\r\n  */\r\nconst Options = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.data);\r\n    const cryptoCurrencies = [{id:\"ETH\"},{id:\"BTC\"}]\r\n    const [availableCurrencies, setAvailableCurrencies] = useState([])\r\n\r\n    useEffect(async () => {\r\n    \r\n        setAvailableCurrencies(cryptoCurrencies.concat(await fetchAllCurrencies()))\r\n    }, [])\r\n\r\n    async function changeAppCurrency(e) {\r\n        dispatch(updatePrefferedCurrency(e.target.value))\r\n        dispatch(refreshDisplayPrices())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Currency:\r\n            <select value={data.displayCurrency} onChange={changeAppCurrency}>\r\n                {availableCurrencies.map((currency) => {\r\n                    return (\r\n                        <option key={currency.id} value={currency.id}>{currency.id}</option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Options;","import React from \"react\";\r\nimport '../../styles/App.css';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport * as FiIcons from \"react-icons/fi\";\r\nimport { FormControlLabel, Menu, MenuItem, Switch } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { refreshDisplayPrices, updatePrefferedCurrency } from \"../../redux/data/dataActions\";\r\nimport Options from \"../pages/Options\";\r\n\r\n/**\r\n  * The triple dot vertical icon at the top right.\r\n  * Simple Dialog menu used to display a few more extra options to the user\r\n  * which are not that relevant as the main menu tabs.\r\n  */\r\nfunction More() {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.data);\r\n    const myCurrency = data.displayCurrency\r\n    const availableCurrencies = [\"GBP\", \"USD\", \"EUR\", \"ETH\", \"BTC\"]\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick} size=\"small\" aria-label=\"delete\">\r\n                <FiIcons.FiMoreHorizontal></FiIcons.FiMoreHorizontal>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n              <MenuItem >About</MenuItem>\r\n                <MenuItem >\r\n                    <Options>\r\n                    </Options>\r\n                </MenuItem>\r\n                <MenuItem >Help</MenuItem>\r\n            </Menu>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default More;","import React from \"react\";\r\nimport '../../styles/App.css';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\r\nimport MyVehicles from '../pages/MyVehicles';\r\nimport Marketplace from '../pages/Marketplace';\r\nimport Verify from '../pages/Verify';\r\nimport Mint from '../pages/Mint';\r\nimport Admin from '../pages/Admin';\r\nimport ControlledRoute from '../navigation/ControlledRoute';\r\nimport Vehicle from \"../pages/Vehicle\";\r\nimport Error from \"../modals/Error\";\r\nimport Loading from \"../modals/Loading\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport Garage from \"../pages/Garage\";\r\nimport Edit from \"../pages/Edit\";\r\nimport MainMenu from \"../navigation/MainMenu\";\r\nimport AccountStatus from \"../navigation/AccountStatus\";\r\nimport PendingTX from \"../modals/PendingTX\";\r\nimport SelectNetwork from \"../navigation/SelectNetwork\";\r\nimport Stack from '@mui/material/Stack';\r\nimport More from \"../navigation/More\";\r\n\r\n/**\r\n * Component for the principal view of the app\r\n * It encapusaltes menus, page views, etc.\r\n */\r\nfunction NormalView() {\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n\r\n                <Stack margin={1} direction=\"row\" justifyContent=\"space-between\" >\r\n                    <MainMenu></MainMenu>\r\n                    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                        <SelectNetwork></SelectNetwork>\r\n                        <AccountStatus></AccountStatus>\r\n                        <More></More>\r\n                    </Stack>\r\n                </Stack>\r\n\r\n                <PendingTX></PendingTX>\r\n                <Error></Error>\r\n                <CustomModal></CustomModal>\r\n                <Loading></Loading>\r\n\r\n                <Switch>\r\n                    <ControlledRoute path='/myvehicles' component={MyVehicles} />\r\n                    <ControlledRoute path='/' exact component={Marketplace} />\r\n                    <ControlledRoute path='/verify' component={Verify} />\r\n                    <ControlledRoute path='/mint' component={Mint} />\r\n                    <ControlledRoute path='/admin' component={Admin} />\r\n                    <ControlledRoute path='/edit' component={Edit} />\r\n                    <Route path='/vehicle' component={Vehicle} />\r\n                    <Route path='/garage' component={Garage} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NormalView;","import React, { useEffect } from \"react\";\r\nimport './styles/App.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { init, loadSmartContracts, login, updateAppAccount, updateAppNetwork } from \"./redux/blockchain/blockchainActions\";\r\nimport NormalView from \"./components/views/NormalView\";\r\nimport { fetchMyData } from \"./redux/data/dataActions\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const app = useSelector((state) => state.app);\r\n  const [first, setfirst] = useState(\"\")\r\n\r\n  /**\r\n  * On app load initialize it and autologin\r\n  */\r\n  useEffect(async () => {\r\n    await dispatch(init())\r\n    await dispatch(login())\r\n  }, []);\r\n\r\n  /**\r\n  * Whenever the current network changes,\r\n  * load the smart contracts for the new network.\r\n  */\r\n  useEffect(async () => {\r\n    if (app.initializedApp) {\r\n      await dispatch(loadSmartContracts())\r\n    }\r\n  }, [blockchain.currentNetwork])\r\n\r\n  /**\r\n  * Whenever the list of smart contracts changes,\r\n  * aka they are refreshed, fetch my data from them.\r\n  */\r\n  useEffect(() => {\r\n    if (app.initializedApp) {\r\n      dispatch(fetchMyData());\r\n    }\r\n  }, [blockchain.smartContracts])\r\n\r\n  /**\r\n  * On new account detected update the app account\r\n  * and then refetch the data for the new account.\r\n  */\r\n  useEffect(() => {\r\n    if (first != \"\") {\r\n      dispatch(updateAppAccount(first));\r\n      dispatch(fetchMyData());\r\n    }\r\n  }, [first])\r\n\r\n\r\n  if (blockchain.walletProvider) {\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      setfirst(accounts[0])\r\n    });\r\n\r\n    window.ethereum.on(\"chainChanged\", (chain) => {\r\n      dispatch(updateAppNetwork(chain))\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NormalView />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}